1:nrow(hamps),
function(i){
any(!is.na(hamps[i,16:19]))
}
)
fm_comp
class(hamps[,16])
is.na(hamps[,16])
hamps[,16]
grep("^$", hamps[,16])
gsub("^$", NA,  hamps[,16])
for (i in 16:19){
hamps[ ,i] = gsub("^$", NA,  hamps[,i])
}
fm_comp = sapply(
1:nrow(hamps),
function(i){
any(!is.na(hamps[i,16:19]))
}
)
fm_comp
fm_equip
which(is.na(fm_comp))
any(is.na(fm_comp))
any(is.na(fm_comp))which
which(fm_comp == FALSE)
which(fm_equip == FALSE) ## variable in raw file
which(fm_equip == "") ## variable in raw file
names(hamos)
names(hamps)
warning_YN = hamps$Warning.delivered.to.Suspect..y.n.
summary(warning_YN)
warning_YN = factor(hamps$Warning.delivered.to.Suspect..y.n.)
summary(warning_YN)
summary(hamps_df$warning_YN)
names(hamps)
RA = hamps$Risk.Assessment.from.DASH..standard..medium.or.high.
RA
q()
knitr::opts_chunk$set(echo = TRUE)
Q1paper = read.csv("Q1 Paper survey only.csv", header=T, quote = "",
row.names = NULL)
summary(Q1paper)
uniqueID = Q1paper$Q7_1
uniqueID[1:10]
Q1paper[1,]
Q1paper <- read_excel("Q1 Paper only FINAL.xlsx", sheet="23Q1P")
# Packages
library(readxl)
Q1paper <- read_excel("Q1 Paper only FINAL.xlsx", sheet="23Q1P")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
Q1paper <- read_excel("Q1 Paper only FINAL.xlsx", sheet="23Q1P")
dim(Q1paper) # 1010, 83
Q1paper <- Q1paper[-(1:3),] # remove the first three rows
# head(Q1paper)
Q1paper <- Q1paper %>%
select(-`UserID (Smart survey only)`, -`Name`, -`Email`, -`IP Address`,
, -`Started`, -`Ended`, -`Tracking Link`,-83)
library(dplyr)
library(dplyr)
library(tidyverse)
# head(Q1paper)
Q1paper <- Q1paper %>%
select(-`UserID (Smart survey only)`, -`Name`, -`Email`, -`IP Address`,
, -`Started`, -`Ended`, -`Tracking Link`,-83)
dim(Q1paper) # 1007, 74
names(Q1paper)
uniqueID = Q1paper[,2]
uniqueID[1:10]
class(Q1paper)
Q1paper
uniqueID = Q1paper$`Unique ID`
uniqueID
Q1paper <- read_excel("Q1 Paper only FINAL.xlsx", sheet="23Q1P")
dim(Q1paper) # 1010, 83
Q1paper <- Q1paper[-(1:3),] # remove the first three rows
# head(Q1paper)
Q1paper <- Q1paper %>%
select(-`UserID (Smart survey only)`, -`Name`, -`Email`, -`IP Address`,
, -`Started`, -`Ended`, -`Tracking Link`,-83)
dim(Q1paper) # 1007, 74
names(Q1paper)
class(Q1paper)
Q1paper = as.data.frame(Q1paper)
class(Q1paper)
names(Q1paper)
Q1paper[,2]
Q1paper[1,]
Q1paper[,9]
names(Q1paper)
Q1paper$`Q. I agree to participate in the research.`
consent_vec = tolower(Q1paper$`Q. I agree to participate in the research.`)
consent_opts = unique(consent_vec)
consent_opts
Q1paper = Q1paper[consent_vec == "agree",]
uniqueID_correct = uniqueID[grep("^[:alpha:]{4}[:num:]{1,2}$")]
uniqueID_correct = uniqueID[grep("^[:alpha:]{4}[:num:]{1,2}$", uniqueID)]
uniqueID_correct[1:100]
uniqueID
uniqueID
uniqueID = Q1paper$`Unique ID`
uniqueID
Q1paper[1,]
uniqueID = Q1paper$`Q. Please create your unique reference number.
We are using a unique reference number rather than asking for your full name so the survey can stay anonymous. We need this ID to link your survey responses together.
This should be made up of the following:
First two letters of your last name
Last two letters of your first name
Day of your birthday (numerical format)
For example ...
Last name: Mouse
First name: Mickey
Date of birth: 04/11/2010
Unique reference number: Moey04
Please enter your unique reference number:`
uniqueID[1:100]
Please enter your unique reference number:`
Please enter your unique reference number:`
names(Q1paper)
uniqueID = Q1paper[,9]
uniqueID_correct = uniqueID[grep("^[:alpha:]{4}[:digit:]{1,2}$", uniqueID)]
length(uniqueID_correct)
uniqueID[1:10]
uniqueID = tolower(Q1paper[,9])
uniqueID_correct = uniqueID[grep("^[:alpha:]{4}[:digit:]{1,2}$", uniqueID)]
length(uniqueID_correct)
grep("^[:alpha:]{4}", uniqueID[1:10])
grep("^[a-z]{4}", uniqueID[1:10])
uniqueID_correct = uniqueID[grep("^[a-z]{4}[0-9]{1,2}$", uniqueID)]
length(uniqueID_correct)
uniqueID_incorrect = uniqueID[-grep("^[a-z]{4}[0-9]{1,2}$", uniqueID)]
uniqueID_incorrect
uniqueID_incorrect = na.omit(uniqueID[-grep("^[a-z]{4}[0-9]{1,2}$", uniqueID)])
uniqueID_incorrect
names(Q1paper)
tell_other = Q1paper[,47]
tell_other[1:100]
tell_other = na.omit(tell_other)
tell_other
install.packages("ggwordcloud")
library(ggworldcloud)
library(ggwordcloud)
### for github:
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/ct4")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
require(medicaldata)
library(naniar)
library(smdi)
library(tidyverse)
library(visdat)
sup_df = supraclavicular[ ,c(2:5, 9)]
sup_df = sup_df%>% mutate(across(c(group, gender), factor))
smdi_data$status = factor(smdi_data$status)
opt_df = opt[ ,c(1:22, 72)]
vis_dat(sup_df)
gg_miss_var(sup_df)
vis_dat(smdi_data)
gg_miss_var(smdi_data, show_pct=T)
gg_miss_case(smdi_data, order_cases = T)
vis_dat(opt_df)
gg_miss_var(opt_df, show_pct=T)
gg_miss_case(opt_df, order_cases = T, show_pct=T)
sup_shadow = as_shadow(sup_df)
kable(sup_shadow)%>%
kable_paper() %>%
scroll_box(width = "100%", height = "200px")
sup_nab = nabular(sup_df)
kable(sup_nab)%>%
kable_paper() %>%
scroll_box(width = "100%", height = "200px")
sup_nab %>%
group_by(bmi_NA) %>%
summarise_at(.vars = "onset_sensory",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
ggplot(sup_nab,
aes(x = onset_sensory,
fill = bmi_NA)) +
geom_histogram()
ggplot(sup_nab,
aes(x = gender,
fill = bmi_NA)) +
geom_bar()
opt_tmp = opt_df[ ,-c(14,17,19,22)]
smdi_nab = nabular(smdi_data)
smdi_nab %>%
group_by(ecog_cat) %>%
summarise_at(.vars = "eventtime",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
ggplot(smdi_nab,
aes(x = eventtime,
fill = status)) +
geom_histogram() + facet_wrap(~ecog_cat_NA, scales = "free_y")
smdi_nab %>%
group_by(egfr_cat) %>%
summarise_at(.vars = "eventtime",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
ggplot(smdi_nab,
aes(x = eventtime,
fill = status)) +
geom_histogram() + facet_wrap(~egfr_cat_NA, scales = "free_y")
smdi_nab %>%
group_by(pdl1_num) %>%
summarise_at(.vars = "eventtime",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
ggplot(smdi_nab,
aes(x = eventtime,
fill = status))+
geom_histogram() + facet_wrap(~pdl1_num_NA, scales = "free_y")
library(gridExtra)
ecog_sm = ggplot(smdi_nab,
aes(x = smoking_cat,
fill = ecog_cat_NA))+
geom_bar()
egfr_sm = ggplot(smdi_nab,
aes(x = smoking_cat,
fill = egfr_cat_NA))+
geom_bar()
pdl1_sm = ggplot(smdi_nab,
aes(x = smoking_cat,
fill = pdl1_num_NA))+
geom_bar()
grid.arrange(ecog_sm, egfr_sm, pdl1_sm, nrow=1)
sup_nab = nabular(sup_df)
sup_glm = glm(bmi_NA ~ group + gender + age + onset_sensory,
data = sup_nab,
family = binomial(link = "logit"))
summary(sup_glm)
ecog_NA_glm1 = glm(ecog_cat_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat,
data=smdi_nab, family = binomial(link="logit"))
summary(ecog_NA_glm1)
ecog_NA_glm2 = glm(ecog_cat_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat + egfr_cat + pdl1_num,
data=smdi_nab, family = binomial(link="logit"))
summary(ecog_NA_glm2)
egfr_NA_glm1 = glm(egfr_cat_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat,
data=smdi_nab, family = binomial(link="logit"))
summary(egfr_NA_glm1)
egfr_NA_glm2 = glm(egfr_cat_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat + ecog_cat + pdl1_num,
data=smdi_nab, family = binomial(link="logit"))
summary(egfr_NA_glm2)
pdl1_NA_glm1 = glm(pdl1_num_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat,
data=smdi_nab, family = binomial(link="logit"))
summary(pdl1_NA_glm1)
pdl1_NA_glm2 = glm(pdl1_num_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat + ecog_cat + egfr_cat,
data=smdi_nab, family = binomial(link="logit"))
summary(pdl1_NA_glm2)
names(opt_tmp)
summary(opt_tmp)
paste(names(opt_tmp), collapse = " + ")
paste(names(smdi_data), collapse = " + ")
glm_opt_BMI_NA = glm(BMI_NA ~ PID + Clinic + Group + Age + Black + White + Nat.Am + Asian + Hisp + Education + Public.Asstce + Hypertension + Diabetes + Use.Tob + Use.Alc + Drug.Add + Prev.preg)
glm_opt_BMI_NA = glm(BMI_NA ~ PID + Clinic + Group + Age + Black + White + Nat.Am + Asian + Hisp + Education + Public.Asstce + Hypertension + Diabetes + Use.Tob + Use.Alc + Drug.Add + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
glm_opt_BMI_NA = glm(
BMI_NA ~ PID + Clinic + Group + Age + Black + White + Nat.Am + Asian + Hisp +
Education + Public.Asstce + Hypertension + Diabetes + Use.Tob + Use.Alc + Drug.Add + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BMI_NA)
summary(opt_tmp)
glm_opt_BMI_NA = glm(
BMI_NA ~ PID + Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Use.Tob + Use.Alc + Drug.Add + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BMI_NA)
glm_opt_BMI_NA = glm(
BMI_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Use.Tob + Use.Alc + Drug.Add + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BMI_NA)
summary(opt_tmp)
names(opt)
opt_df = opt[ ,c(1:4, 10:22, 72)]
?apply
?do
?across
opt_df %>% mutate(across(all_of(cols), gsub, pattern = "", replacement = NA))
opt_df %>% mutate(across(names(opt_df)), gsub, pattern = "", replacement = NA))
summary(opt_df)
opt_df %>% mutate(across(c(Use.Tob, Use.Alc, Drug.Add), gsub, pattern = "", replacement = NA))
opt_df = opt[ ,c(1:4, 10:22, 72)]
opt_df %>% mutate(across(c(Use.Tob, Use.Alc, Drug.Add), gsub, pattern = "", replacement = NA))
summary(opt_df)
opt_df = opt_df %>% mutate(across(c(Use.Tob, Use.Alc, Drug.Add), gsub, pattern = "", replacement = NA))
summary(opt_df)
opt_df = opt_df%>% mutate(across(c(Use.Tob, Use.Alc, Drug.Add)), factor)
opt_df = opt_df%>% mutate(across(c(Use.Tob, Use.Alc, Drug.Add), factor))
summary(opt_df)
opt_df = opt[ ,c(1:4, 10:22, 72)]
opt_df = opt_df %>% mutate(across(c(Use.Tob, Use.Alc, Drug.Add), gsub, pattern = "", replacement = NA))
summary(opt_df)
unique(opt_df$Use.Alc)
opt_df = opt[ ,c(1:4, 10:22, 72)]
unique(opt_df$Use.Alc)
unique(as.character(opt_df$Use.Alc))
opt_df = opt_df %>% mutate(across(c(Use.Tob, Use.Alc, Drug.Add), gsub, pattern = "^ +$", replacement = NA))
unique(as.character(opt_df$Use.Alc))
opt_df = opt_df%>% mutate(across(c(Use.Tob, Use.Alc, Drug.Add), factor))
summary(opt_df)
opt_df = opt[ ,c(1:4, 10:22, 72)]
opt_df = opt_df %>% mutate(across(c(Use.Tob, Use.Alc, Drug.Add), gsub, pattern = "^ +$", replacement = NA))%>% mutate(across(c(Use.Tob, Use.Alc, Drug.Add), factor))
summary(opt_df)
require(medicaldata)
library(naniar)
library(smdi)
library(tidyverse)
library(visdat)
sup_df = supraclavicular[ ,c(2:5, 9)]
sup_df = sup_df%>% mutate(across(c(group, gender), factor))
smdi_data$status = factor(smdi_data$status)
opt_df = opt[ ,c(1:4, 10:22, 72)]
opt_df = opt_df %>%
mutate(across(c(Use.Tob, Use.Alc, Drug.Add), gsub, pattern = "^ +$", replacement = NA))%>%
mutate(across(c(Use.Tob, Use.Alc, Drug.Add), factor))
vis_dat(sup_df)
gg_miss_var(sup_df)
vis_dat(smdi_data)
gg_miss_var(smdi_data, show_pct=T)
gg_miss_case(smdi_data, order_cases = T)
vis_dat(opt_df)
gg_miss_var(opt_df, show_pct=T)
gg_miss_case(opt_df, order_cases = T, show_pct=T)
sup_shadow = as_shadow(sup_df)
kable(sup_shadow)%>%
kable_paper() %>%
scroll_box(width = "100%", height = "200px")
sup_nab = nabular(sup_df)
kable(sup_nab)%>%
kable_paper() %>%
scroll_box(width = "100%", height = "200px")
sup_nab %>%
group_by(bmi_NA) %>%
summarise_at(.vars = "onset_sensory",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
ggplot(sup_nab,
aes(x = onset_sensory,
fill = bmi_NA)) +
geom_histogram()
ggplot(sup_nab,
aes(x = gender,
fill = bmi_NA)) +
geom_bar()
opt_tmp = opt_df[ ,-c(14,17,19,22)]
smdi_nab = nabular(smdi_data)
smdi_nab %>%
group_by(ecog_cat) %>%
summarise_at(.vars = "eventtime",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
ggplot(smdi_nab,
aes(x = eventtime,
fill = status)) +
geom_histogram() + facet_wrap(~ecog_cat_NA, scales = "free_y")
smdi_nab %>%
group_by(egfr_cat) %>%
summarise_at(.vars = "eventtime",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
ggplot(smdi_nab,
aes(x = eventtime,
fill = status)) +
geom_histogram() + facet_wrap(~egfr_cat_NA, scales = "free_y")
smdi_nab %>%
group_by(pdl1_num) %>%
summarise_at(.vars = "eventtime",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
ggplot(smdi_nab,
aes(x = eventtime,
fill = status))+
geom_histogram() + facet_wrap(~pdl1_num_NA, scales = "free_y")
library(gridExtra)
ecog_sm = ggplot(smdi_nab,
aes(x = smoking_cat,
fill = ecog_cat_NA))+
geom_bar()
egfr_sm = ggplot(smdi_nab,
aes(x = smoking_cat,
fill = egfr_cat_NA))+
geom_bar()
pdl1_sm = ggplot(smdi_nab,
aes(x = smoking_cat,
fill = pdl1_num_NA))+
geom_bar()
grid.arrange(ecog_sm, egfr_sm, pdl1_sm, nrow=1)
sup_nab = nabular(sup_df)
sup_glm = glm(bmi_NA ~ group + gender + age + onset_sensory,
data = sup_nab,
family = binomial(link = "logit"))
summary(sup_glm)
ecog_NA_glm1 = glm(ecog_cat_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat,
data=smdi_nab, family = binomial(link="logit"))
summary(ecog_NA_glm1)
ecog_NA_glm2 = glm(ecog_cat_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat + egfr_cat + pdl1_num,
data=smdi_nab, family = binomial(link="logit"))
summary(ecog_NA_glm2)
egfr_NA_glm1 = glm(egfr_cat_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat,
data=smdi_nab, family = binomial(link="logit"))
summary(egfr_NA_glm1)
egfr_NA_glm2 = glm(egfr_cat_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat + ecog_cat + pdl1_num,
data=smdi_nab, family = binomial(link="logit"))
summary(egfr_NA_glm2)
pdl1_NA_glm1 = glm(pdl1_num_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat,
data=smdi_nab, family = binomial(link="logit"))
summary(pdl1_NA_glm1)
pdl1_NA_glm2 = glm(pdl1_num_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat + ecog_cat + egfr_cat,
data=smdi_nab, family = binomial(link="logit"))
summary(pdl1_NA_glm2)
glm_opt_BMI_NA = glm(
BMI_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Use.Tob + Use.Alc + Drug.Add + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BMI_NA)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
names(opt_df)
opt_tmp = opt_df[ ,c(9,12,14,17)]
names(opt_tmp)
opt_tmp = opt_df[ ,-c(9,12,14,17)]
bookdown::render_book("index.Rmd", "bookdown::gitbook")
names(opt_tmp)[any(is.na(opt_tmp))]
summary(opt_tmp)
glm_opt_BMI_NA = glm(
BMI_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Use.Tob + Use.Alc + Drug.Add + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BMI_NA)
summary(opt_tmp)
glm_opt_BMI_comp = glm(
BMI_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BMI_comp)
glm_opt_BMI_NA = glm(
BMI_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Use.Tob_NA + Use.Alc_NA + Drug.Add_NA + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BMI_NA)
?opt
glm_opt_BMI_NA = glm(
BMI_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Use.Tob_NA + Use.Alc_NA + Drug.Add_NA + Prev.preg,
data = nabular(opt_df),
family = binomial(link = "logit"))
glm_opt_BMI_NA = glm(
BMI_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Use.Tob_NA + Use.Alc_NA + Drug.Add_NA + Prev.preg,
data = nabular(opt_df),
family = binomial(link = "logit"))
summary(glm_opt_BMI_NA)
ggplot(data=nabular(opt_tmp), aes(x=Clinic, fill = BMI_NA)) +
geom_bar()
ggplot(data = nabular(opt_tmp), aes(x=Education, fill = BMI_NA)) +
geom_bar()
names(opt_tmp)
glm_opt_BW_allvar = glm(
Birthweight ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + BMI + Use.Tob + Use.Alc + Drug.Add + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
glm_opt_BW_allvar = glm(
Birthweight_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + BMI + Use.Tob + Use.Alc + Drug.Add + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BW_allvar)
glm_opt_BW_comp = glm(
Birthweight_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BW_comp)
glm_opt_BW_NA = glm(
Birthweight_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + BMI_NA + Use.Tob_NA + Use.Alc_NA + Drug.Add_NA + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BW_NA)
ggplot(data = nabular(opt_tmp), aes(x=Diabetes, fill = Birthweight_NA)) +
geom_bar()
smdi_vis(smdi_data)
gg_miss_upset(smdi_data)
?gg_miss_upset
gg_miss_upset(opt_df)
summary(opt_df)
gg_miss_upset(opt_tmp)
md_pattern(smdi_data)
md.pattern(smdi_data)
smdi_asmd(smdi_data)
?smdi_asmd
names(smdi_data)
?smdi_data
?smdi_asmd
names(smdi_data, covar = "exposure")
smdi_asmd(smdi_data, covar = "exposure")
smdi_hotelling(smdi_data)
smdi_hotelling(sup_df)
smdi_little(smdi_data)
smdi_little(sup_df)
q()
