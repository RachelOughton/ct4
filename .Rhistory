md.pattern(opt_df)
?md.pattern
md.pattern(sup_df)
md.pattern(smdi_data)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?md.pattern
bookdown::render_book("index.Rmd", "bookdown::gitbook")
md.pattern(opt_df)
md.pattern(opt_df, rotate_names=T)
md.pattern(opt_df, rotate.names=T)
miss_case_table(smdi_data)
miss_var_summary(smdi_data)
miss_var_table(smdi_data)
dim(opt_df)
miss_case_summary(opt_df)
knitr::opts_chunk$set(echo=TRUE, message = FALSE, warning = FALSE)
miss_case_table(opt_df)
miss_var_summary(opt_df)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
smdi_hotelling(smdi_data)
smdi_asmd(smdi_data)
smdi_asmd(opt_df)
smdi_hotelling(opt_df)
smdi_hotelling(opt_tmp)
smdi_amsd(opt_tmp)
smdi_asmd(opt_tmp)
?smdi_asmd
smdi_asmd(sup_df)
?sup_df
summary(sup_df)
smdi_asmd(smdi_data)
class(smdi_asmd(smdi_data))
names(smdi_asmd(smdi_data))
asmd_sup = smdi_asmd(sup_df)
asmd_sup
asmd_sup$bmi$asmd_table1
asmd_sup$bmi$asmd_plot
asmd_opt = smdi_asmd(opt_tmp)
asmd_opt
summary(opt_tmp)
asmd_opt$BMI$asmd_plot
asmd_opt = smdi_asmd(opt_tmp, includeNA = T)
asmd_opt
asmd_opt$BMI$asmd_plot
asmd_opt = smdi_asmd(opt_tmp[ ,-1], includeNA = T)
asmd_opt$BMI$asmd_plot
asmd_opt$Use.Alc$asmd_table1
asmd_opt$Use.Alc$asmd_plot
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?smdi_asmd
print(asmd_opt$Use.Alc$asmd_plot)
print(asmd_opt$Use.Alc$asmd_table1)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?smdi_asmd
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?opt
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?smdi_hotelling
smdi_hotelling(sup_df)
?smdi_hotelling
str(sup_df)
smdi_hotelling(smdi_data)
smdi_hotelling(opt_tmp)
nrow(na.omit(sup_df))
nrow(na.omit(smdi_data))
nrow(na.mit(opt_tmp))
nrow(na.omit(opt_tmp))
nrow(sup_df)
nrow(na.omit(smdi_data))
nrow(smdi_data)
795/2500
nrow(na.omit(opt_tmp))
nrow(opt_tmp)
113/823
summary(opt_df$Use.Tob)
opt_df$BL.Cig.Day[opt_df$Use.Tob=="No"] = 0
summary(opt_df$BL.Cig.Day)
length(opt_df$BL.Cig.Day[opt_df$Use.Tob == "No"])
levels(opt_df)
levels(opt_df$Use.Tob)
opt_df$BL.Cig.Day[opt_df$Use.Tob=="No "] = 0
length(opt_df$BL.Cig.Day[opt_df$Use.Tob == "No "])
levels(opt_df$Use.Alc)
opt_df$BL.Cig.Day[opt_df$Use.Tob=="No "] = 0
summary(opt_df$BL.Cig.Day)
opt_df$BL.Drks.Day[opt_df$Use.Alc=="No "] = 0
levels(opt_df$Prev.preg)
opt_df$N.prev.preg[opt_df$Prev.preg=="No "] = 0
names(opt_df)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
summary(smdi_data)
hist(smdi_data$pdl1_num)
paste(names(smdi_data), collapse = "+")
paste(names(smdi_data), collapse = " + ")
egfr_glm = glm(
egfr_cat ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat +
histology_cat + ses_cat + copd_cat + eventtime + status + ecog_cat + pdl1_num,
data = smdi_data,
family = binomial(link = "logit")
)
summary(egfr_glm)
smdi_nab = nabular(smdi_data)
egfr_glm2 = glm(
egfr_cat ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat +
histology_cat + ses_cat + copd_cat + eventtime + status + pdl1_num_NA,
data = smdi_nab,
family = binomial(link = "logit")
)
summary(egfr_glm2)
smdi_egfr_miss = smdi_data[is.na(smdi_data$egfr_cat),]
summary(smdi_egfr_miss)
smdi_egfr_miss = smdi_nab[is.na(smdi_nab$egfr_cat),]
summary(smdi_egfr_miss)
egfr_imp_glm = predict(egfr_glm1, newdata = smdi_egfr_miss)
egfr_imp_glm = predict(egfr_glm2, newdata = smdi_egfr_miss)
egfr_imp_glm
smdi_imp$egfr_cat[is.na(smdi_imp$egfr_cat)] = egfr_imp_glm
smdi_imp = smdi_data
smdi_imp = nabular(smdi_data)
smdi_egfr_miss = smdi_nab[is.na(smdi_nab$egfr_cat),]
egfr_imp_glm = predict(egfr_glm2, newdata = smdi_egfr_miss)
smdi_imp$egfr_cat[is.na(smdi_imp$egfr_cat)] = egfr_imp_glm
summary(smdi_imp$egfr_cat)
length(egfr_imp_glm)
smdi_imp = nabular(smdi_data)
smdi_egfr_miss = smdi_nab[is.na(smdi_nab$egfr_cat),]
egfr_imp_glm = predict(egfr_glm2, newdata = smdi_egfr_miss)
smdi_imp$egfr_cat[is.na(smdi_imp$egfr_cat)] = egfr_imp_glm
summary(smdi_imp$egfr_cat)
?predict
?predict.glm
egfr_imp_glm = predict(egfr_glm2, newdata = smdi_egfr_miss, type = "response")
smdi_imp$egfr_cat[is.na(smdi_imp$egfr_cat)] = egfr_imp_glm
summary(smdi_imp$egfr_cat)
summary(egfr_imp_glm)
egfr_imp_glm = predict(egfr_glm2, newdata = smdi_egfr_miss, type = "response")
summary(egfr_imp_glm)
?replace_na
y <- c(1, 2, NA, NA, 5)
z <- c(NA, NA, 3, 4, 5)
coalesce(y,z)
coalesce(z,y)
y <- c(1, 2, NA, NA, 5)
z <- c(NA, NA, 3, 4, 6)
coalesce(y,z)
coalesce(z,y)
egfr_imp_tmp = coalesce(smdi_imp$egfr_cat, egfr_imp_glm)
class(egfr_imp_glm)
length(egfr_imp_glm)
smdi_nab = nabular(smdi_data)
smdi_egfr_miss = smdi_nab[is.na(smdi_nab$egfr_cat),]
egfr_imp_glm = predict(egfr_glm2, newdata = smdi_egfr_miss, type = "response")
smdi_egfr_miss$egfr_cat = egfr_imp_glm
summary(smdi_egfr_miss)
ggplot(data = smdi_imp, aes(x=egfr_cat, y=eventtime, col = egfr_cat_NA)) + geom_point()
summary(smdi_imp$egfr_cat)
egfr_imp_glm = predict(egfr_glm2, newdata = smdi_egfr_miss, type = "response")
smdi_egfr_miss$egfr_cat = egfr_imp_glm
smdi_imp = rbind(smdi_egfr_miss, smdi_egfr_comp)
smdi_egfr_comp = smdi_nab[!is.na(smdi_nab$egfr_cat),]
smdi_egfr_miss = smdi_nab[is.na(smdi_nab$egfr_cat),]
egfr_imp_glm = predict(egfr_glm2, newdata = smdi_egfr_miss, type = "response")
smdi_egfr_miss$egfr_cat = egfr_imp_glm
smdi_imp = rbind(smdi_egfr_miss, smdi_egfr_comp)
summary(smdi_imp$egfr_cat)
smdi_imp$egfr_cat
class(egfr_imp_glm)
class(smdi_egfr_comp$egfr_cat)
smdi_imp$egfr_cat[2000]
as.numeric(smdi_imp$egfr_cat[2000])
as.numeric(smdi_imp$egfr_cat)
hist(as.numeric(smdi_imp$egfr_cat))
pdl1_glm = glm(
pdl1_num ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat +
histology_cat + ses_cat + copd_cat + eventtime + status + ecog_cat + egfr_cat,
data = smdi_data,
family = binomial(link = "logit")
)
pdl1_glm = lm(
pdl1_num ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat +
histology_cat + ses_cat + copd_cat + eventtime + status + ecog_cat + egfr_cat,
data = smdi_data
)
summary(pdl1_glm)
ecog_glm2 = glm(
ecog_cat ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat +
histology_cat + ses_cat + copd_cat + eventtime + status + pdl1_num_NA + egfr_cat_NA,
data = smdi_nab,
family = binomial(link = "logit")
)
summary(ecog_glm2)
pdl1_lm2 = lm(
pdl1_num ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat +
histology_cat + ses_cat + copd_cat + eventtime + status + egfr_cat_NA,
data = smdi_nab
)
summary(pdl1_lm2)
smdi_pdl1_comp = smdi_nab[!is.na(smdi_nab$pdl1_num),]
pdl1_imp_lm = predict(pdl1_lm2, newdata = smdi_pdl1_miss)
smdi_pdl1_comp = smdi_nab[!is.na(smdi_nab$pdl1_num),]
smdi_pdl1_miss = smdi_nab[is.na(smdi_nab$pdl1_num),]
pdl1_imp_lm = predict(pdl1_lm2, newdata = smdi_pdl1_miss)
smdi_pdl1_miss$pdl1_num = pdl1_imp_lm
smdi_imp = rbind(smdi_pdl1_miss, smdi_pdl1_comp)
ggplot(data = smdi_imp, aes(x=pdl1_num, y=eventtime, col = pdl1_num_NA)) + geom_point()
ggplot(data = smdi_imp, aes(x=pdl1_num, y=eventtime, col = pdl1_num_NA)) + geom_point(alpha=0.6) + theme_bw()
ggplot(data = smdi_imp, aes(x=pdl1_num, y=eventtime, col = pdl1_num_NA)) +
facet_wrap(~exposure) +
geom_point(alpha=0.6) +
theme_bw()
ggplot(data = smdi_imp, aes(x=pdl1_num) + geom_histogram() +
ggplot(data = smdi_imp, aes(x=pdl1_num)) + geom_histogram() +
facet_wrap(~pdl1_num_NA) +
theme_bw()
)
ggplot(data = smdi_imp, aes(x=pdl1_num)) + geom_histogram() +
facet_wrap(~pdl1_num_NA) +
theme_bw()
smdi_pdl1_comp$pdl1_imp = predict(pdl1_lm2, newdata = smdi_pdl1_comp)
smdi_pdl1_comp$pdl1_imp = predict(pdl1_lm2, newdata = smdi_pdl1_comp)
# The next line just recreates the imputataion so that we can bind the datasets together
smdi_pdl1_miss$pdl1_imp = predict(pdl1_lm2, newdata = smdi_pdl1_miss)
smdi_pdl1_imp = rbind(smdi_pdl1_comp, smdi_pdl1_miss)
ggplot(data = smdi_pdl1_imp, aes(x=pdl1_imp, y=pdl1_num, col = pdl1_num_NA)) +
geom_point() +
xlab("Regression fit / imputed value") +
ylab("Observed value / imputed value") +
theme_bw()
?stan_glm
pdl1_lm2 = stan_glm(
pdl1_num ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat +
histology_cat + ses_cat + copd_cat + eventtime + status + egfr_cat_NA,
data = smdi_nab
)
library(rstanarm)
pdl1_lm2 = stan_glm(
pdl1_num ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat +
histology_cat + ses_cat + copd_cat + eventtime + status + egfr_cat_NA,
data = smdi_nab
)
summary(pdl1_lm2)
pdl1_imp_lm = predict(pdl1_lm2, newdata = smdi_pdl1_miss)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?stan_glm
smdi_pdl1_comp$pdl1_imp_rand = smdi_pdl1_comp$pdl1_imp
## This time draw one point at random from the posterior distribution for each participant
smdi_pdl1_miss$pdl1_imp_rand = posterior_predict(pdl1_lm2, newdata = smdi_pdl1_miss, draws=1)
smdi_pdl1_imp = rbind(smdi_pdl1_comp, smdi_pdl1_miss)
ggplot(data = smdi_pdl1_imp, aes(x=pdl1_imp, y=pdl1_imp_rand, col = pdl1_num_NA)) +
geom_point() +
xlab("Regression fit") +
ylab("Observed value / randomly imputed value") +
theme_bw()
smdi_pdl1_comp$pdl1_imp_rand = smdi_pdl1_comp$pdl1_num
## This time draw one point at random from the posterior distribution for each participant
smdi_pdl1_miss$pdl1_imp_rand = posterior_predict(pdl1_lm2, newdata = smdi_pdl1_miss, draws=1)
smdi_pdl1_imp = rbind(smdi_pdl1_comp, smdi_pdl1_miss)
ggplot(data = smdi_pdl1_imp, aes(x=pdl1_imp, y=pdl1_imp_rand, col = pdl1_num_NA)) +
geom_point() +
xlab("Regression fit") +
ylab("Observed value / randomly imputed value") +
theme_bw()
?posterior_predict
class(pdl1_lm2)
hist(smdi_pdl1_miss$pdl1_imp_rand)
hist(smdi_pdl1_miss$pdl1_imp)
hist(smdi_pdl1_miss$pdl1_imp_rand)
names(smdi_pdl1_miss)
hist(smdi_pdl1_comp$pdl1_imp_rand)
smdi_pdl1_imp = rbind(smdi_pdl1_comp, smdi_pdl1_miss)
hist(smdi_pdl1_imp$pdl1_imp_rand)
hist(smdi_pdl1_miss$pdl1_imp_rand)
dim(smdi_pdl1_miss)
hist(smdi_pdl1_miss$pdl1_imp_rand)
str(smdi_pdl1_miss)
?posterior_predict
pdl1_rand_draw = posterior_predict(pdl1_lm2, newdata = smdi_pdl1_miss, draws=1)
dim(pdl1_rand_draw)
class(pdl1_rand_draw)
as.numeric(pdl1_rand_draw)
length(as.numeric(pdl1_rand_draw))
require(medicaldata)
library(naniar)
library(smdi)
library(tidyverse)
library(visdat)
library(rstanarm)
sup_df = supraclavicular[ ,c(2:5, 9)]
sup_df = sup_df%>% mutate(across(c(group, gender), factor))
smdi_data$status = factor(smdi_data$status)
opt_df = opt[ ,c(1:4, 10:22, 72)]
opt_df = opt_df %>%
mutate(across(c(Use.Tob, Use.Alc, Drug.Add),
gsub, pattern = "^ +$", replacement = NA))%>%
mutate(across(c(Use.Tob, Use.Alc, Drug.Add), factor))
vis_dat(sup_df, sort_type=F)
gg_miss_var(sup_df)
gg_miss_case(sup_df)
md.pattern(sup_df)
vis_dat(smdi_data)
gg_miss_var(smdi_data, show_pct=T)
gg_miss_case(smdi_data, order_cases = T)
md.pattern(smdi_data, rotate.names = T)
vis_dat(opt_df)
gg_miss_var(opt_df, show_pct=T)
gg_miss_case(opt_df, order_cases = T, show_pct=T)
miss_case_summary(opt_df)
miss_case_table(opt_df)
miss_var_summary(opt_df)
sup_shadow = as_shadow(sup_df)
kable(sup_shadow)%>%
kable_paper() %>%
scroll_box(width = "100%", height = "200px")
sup_nab = nabular(sup_df)
kable(sup_nab)%>%
kable_paper() %>%
scroll_box(width = "100%", height = "200px")
sup_nab %>%
group_by(bmi_NA) %>%
summarise_at(.vars = "onset_sensory",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
ggplot(sup_nab,
aes(x = onset_sensory,
fill = bmi_NA)) +
geom_histogram()
ggplot(sup_nab,
aes(x = gender,
fill = bmi_NA)) +
geom_bar()
opt_tmp = opt_df[ ,-c(9,12,14,17)]
smdi_nab = nabular(smdi_data)
smdi_nab %>%
group_by(ecog_cat) %>%
summarise_at(.vars = "eventtime",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
ggplot(smdi_nab,
aes(x = eventtime,
fill = status)) +
geom_histogram() + facet_wrap(~ecog_cat_NA, scales = "free_y")
smdi_nab %>%
group_by(egfr_cat) %>%
summarise_at(.vars = "eventtime",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
ggplot(smdi_nab,
aes(x = eventtime,
fill = status)) +
geom_histogram() + facet_wrap(~egfr_cat_NA, scales = "free_y")
smdi_nab %>%
group_by(pdl1_num) %>%
summarise_at(.vars = "eventtime",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
ggplot(smdi_nab,
aes(x = eventtime,
fill = status))+
geom_histogram() + facet_wrap(~pdl1_num_NA, scales = "free_y")
library(gridExtra)
ecog_sm = ggplot(smdi_nab,
aes(x = smoking_cat,
fill = ecog_cat_NA))+
geom_bar()
egfr_sm = ggplot(smdi_nab,
aes(x = smoking_cat,
fill = egfr_cat_NA))+
geom_bar()
pdl1_sm = ggplot(smdi_nab,
aes(x = smoking_cat,
fill = pdl1_num_NA))+
geom_bar()
grid.arrange(ecog_sm, egfr_sm, pdl1_sm, nrow=1)
smdi_hotelling(sup_df)
smdi_hotelling(smdi_data)
smdi_hotelling(opt_tmp)
asmd_sup = smdi_asmd(sup_df, includeNA=T)
asmd_sup
kable(asmd_sup$bmi$asmd_table1)
asmd_sup$bmi$asmd_plot
asmd_opt = smdi_asmd(opt_tmp[ ,-1], includeNA=T)
asmd_opt
asmd_opt$BMI$asmd_plot
kable(asmd_opt$BMI$asmd_table1)
kable(asmd_opt$Use.Alc$asmd_table1)
asmd_opt$Use.Alc$asmd_plot
sup_nab = nabular(sup_df)
sup_glm = glm(bmi_NA ~ group + gender + age + onset_sensory,
data = sup_nab,
family = binomial(link = "logit"))
summary(sup_glm)
ecog_NA_glm1 = glm(ecog_cat_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat,
data=smdi_nab, family = binomial(link="logit"))
summary(ecog_NA_glm1)
ecog_NA_glm2 = glm(ecog_cat_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat + egfr_cat + pdl1_num,
data=smdi_nab, family = binomial(link="logit"))
summary(ecog_NA_glm2)
egfr_NA_glm1 = glm(egfr_cat_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat,
data=smdi_nab, family = binomial(link="logit"))
summary(egfr_NA_glm1)
egfr_NA_glm2 = glm(egfr_cat_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat + ecog_cat + pdl1_num,
data=smdi_nab, family = binomial(link="logit"))
summary(egfr_NA_glm2)
pdl1_NA_glm1 = glm(
pdl1_num_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat +
alk_cat + histology_cat + ses_cat + copd_cat,
data=smdi_nab, family = binomial(link="logit"))
summary(pdl1_NA_glm1)
pdl1_NA_glm2 = glm(pdl1_num_NA ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat + histology_cat + ses_cat + copd_cat + ecog_cat + egfr_cat,
data=smdi_nab, family = binomial(link="logit"))
summary(pdl1_NA_glm2)
glm_opt_BMI_allvar = glm(
BMI_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Use.Tob + Use.Alc + Drug.Add + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BMI_allvar)
glm_opt_BMI_comp = glm(
BMI_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BMI_comp)
glm_opt_BMI_NA = glm(
BMI_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Use.Tob_NA + Use.Alc_NA + Drug.Add_NA + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BMI_NA)
ggplot(data=nabular(opt_tmp), aes(x=Clinic, fill = BMI_NA)) +
geom_bar()
glm_opt_BW_allvar = glm(
Birthweight_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + BMI + Use.Tob + Use.Alc + Drug.Add + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BW_allvar)
glm_opt_BW_comp = glm(
Birthweight_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BW_comp)
glm_opt_BW_NA = glm(
Birthweight_NA ~ Clinic + Group + Age +
Education + Public.Asstce + Hypertension + Diabetes + BMI_NA + Use.Tob_NA + Use.Alc_NA + Drug.Add_NA + Prev.preg,
data = nabular(opt_tmp),
family = binomial(link = "logit"))
summary(glm_opt_BW_NA)
ggplot(data = nabular(opt_tmp), aes(x=Diabetes, fill = Birthweight_NA)) +
geom_bar()
nrow(na.omit(sup_df))
nrow(sup_df)
nrow(na.omit(smdi_data))
nrow(smdi_data)
nrow(na.omit(opt_tmp))
nrow(opt_tmp)
opt_df_imp = opt_df
opt_df_imp$BL.Cig.Day[opt_df_imp$Use.Tob=="No "] = 0
opt_df_imp$BL.Drks.Day[opt_df_imp$Use.Alc=="No "] = 0
opt_df_imp$N.prev.preg[opt_df_imp$Prev.preg=="No "] = 0
vis_dat(opt_df, sort_type = F)
vis_dat(opt_df_imp, sort_type = F)
pdl1_lm = stan_glm(
pdl1_num ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat +
histology_cat + ses_cat + copd_cat + eventtime + status + ecog_cat + egfr_cat,
data = smdi_data
)
summary(pdl1_lm)
smdi_nab = nabular(smdi_data)
pdl1_lm2 = stan_glm(
pdl1_num ~ exposure + age_num + female_cat + smoking_cat + physical_cat + alk_cat +
histology_cat + ses_cat + copd_cat + eventtime + status + egfr_cat_NA,
data = smdi_nab
)
summary(pdl1_lm2)
## Split the data according to whether egfr_cat is missing
smdi_pdl1_comp = smdi_nab[!is.na(smdi_nab$pdl1_num),]
smdi_pdl1_miss = smdi_nab[is.na(smdi_nab$pdl1_num),]
## Use the GLM to fit values to egfr_cat
pdl1_imp_lm = predict(pdl1_lm2, newdata = smdi_pdl1_miss)
smdi_pdl1_miss$pdl1_num = pdl1_imp_lm
## Join the data back together again (in a different order, but it doesn't matter)
smdi_imp = rbind(smdi_pdl1_miss, smdi_pdl1_comp)
smdi_pdl1_comp$pdl1_imp = predict(pdl1_lm2, newdata = smdi_pdl1_comp)
# The next line just recreates the imputataion so that we can bind the datasets together
smdi_pdl1_miss$pdl1_imp = predict(pdl1_lm2, newdata = smdi_pdl1_miss)
smdi_pdl1_imp = rbind(smdi_pdl1_comp, smdi_pdl1_miss)
ggplot(data = smdi_pdl1_imp, aes(x=pdl1_imp, y=pdl1_num, col = pdl1_num_NA)) +
geom_point() +
xlab("Regression fit") +
ylab("Observed value / imputed value") +
theme_bw()
smdi_pdl1_comp$pdl1_imp_rand = smdi_pdl1_comp$pdl1_num
pdl1_rand_draw = posterior_predict(pdl1_lm2, newdata = smdi_pdl1_miss, draws=1)
smdi_pdl1_miss$pdl1_imp_rand = as.numeric(pdl1_rand_draw)
hist(smdi_pdl1_miss$pdl1_imp_rand)
smdi_pdl1_imp = rbind(smdi_pdl1_comp, smdi_pdl1_miss)
ggplot(data = smdi_pdl1_imp, aes(x=pdl1_imp, y=pdl1_imp_rand, col = pdl1_num_NA)) +
geom_point() +
xlab("Regression fit") +
ylab("Observed value / randomly imputed value") +
theme_bw()
names(smdi_data)
plot(pdl1_lm2, plotfun="areas", prob = 0.95, pars = c("exposure", "age_num"))
plot(pdl1_lm2, plotfun="areas", prob = 0.95, pars = c("exposure"))
plot(pdl1_lm2, plotfun="areas", prob = 0.95, pars = c("age_num"))
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
