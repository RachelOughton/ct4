typeprev_sus = hamps_int_new$`Suspect - previous DA incidents over the past 12 months (incident type) - Incident types seperated by ";"`,
CoC_susprev = c(FALSE, TRUE, FALSE),
violent_SO_susprev = c(TRUE, TRUE, FALSE),
propensity_score = rep(NA, 3),
propensity_score3 = rep(NA, 3)
)
names(hamps_full)[c(1,5)] = c("victim_ID", "suspect_ID")
hamps_full = rbind(hamps_full, hamps_new_df)
hamps_full$protection_order[hamps_full$protection_order == "NA"] = NA
hamps_full$police_force = "Hampshire"
hamps_full$warning_YN[hamps_full$FM_equip == FALSE]= "No"
hamps_fo = read_excel("FinalData/Hamps_Domestic - Performance Summary Phase 3 Final.xlsx", sheet=1, skip=2)
n_fo_sus = rep(0, nrow(hamps_full))
n_fo_dyad = rep(0, nrow(hamps_full))
for (i in 1:nrow(hamps_full)){
vicID_i = hamps_full$victim_ID[i]
susID_i = hamps_full$suspect_ID[i]
fo_sub_sus = hamps_fo[(hamps_fo$`Suspect C Nominal No` == susID_i), ]
fo_sub_dyad = hamps_fo[
((hamps_fo$`Victim C Nominal Number` == vicID_i)&(hamps_fo$`Suspect C Nominal No` == susID_i)),
]
n_fo_sus[i] = nrow(fo_sub_sus)
n_fo_dyad[i] = nrow(fo_sub_dyad)
}
hamps_full$n_fo_sus = n_fo_sus
hamps_full$n_fo_dyad = n_fo_dyad
hamps_full$n_fo_dyad[is.na(hamps_full$n_fo_dyad)] = 0
hamps_full$n_fo_sus[is.na(hamps_full$n_fo_sus)] = 0
ggplot(data=hamps_full, aes(x=n_fo_dyad, fill = FM_equip)) +
geom_histogram(position = "dodge") +
xlab("Follow-on incidents for same dyad")
ggplot(data=hamps_full, aes(x=n_fo_sus, fill = FM_equip)) +
geom_histogram(position = "dodge") +
xlab("Follow-on incidents for same suspect")
psm_hamps_final = glm(
FM_equip ~ CoC  + nprev_sus + risk_ass + CoC_susprev + protection_order,
data = hamps_full,
family = binomial(link="logit"))
vif(psm_hamps_final)
tbl_regression(psm_hamps_final)
hamps_po_final = predict(
object = psm_hamps_final,
newdata = hamps_full,
type = "response"
)
hamps_full$ps_final = hamps_po_final
ggplot(data=hamps_full, aes(x=ps_final, fill = FM_equip)) +
geom_histogram(position = "dodge")
table(hamps_full$protection_order)
hamps_full = hamps_full[hamps_full$ps_final > 0.1,]
hamps_full = hamps_full[!is.na(hamps_full$victim_ID),]
ggplot(data=hamps_full, aes(x=ps_final, fill = FM_equip)) +
geom_histogram(position = "dodge")
table(hamps_full$protection_order)
hamps_wy = rbind(hamps_full[,-c(27,28)], wy_full[ ,-27])
dur_fo1= read_excel("FinalData/Dur Op Wicker follow on data dump anon.xlsx")
dur_fo2 = read_excel("FinalData/Dur Raw data draw comparison data from here RIR 031 34 - Op Wicker data FINAL.xlsx", sheet=3)
any(names(dur_fo1)!=names(dur_fo2))
names_fo1match = names(dur_fo1)[names(dur_fo1) %in% names(dur_fo2)]
names_fo1match
dur_fo1_res = dur_fo1[, names(dur_fo1) %in% names(dur_fo2) ]
dur_fo2_res = dur_fo2[, dput(names_fo1match)]
dur_fo_full = rbind(dur_fo1_res, dur_fo2_res)
table(dur_fo_full$Role)
dur_fo_vic = dur_fo_full[dur_fo_full$Role == "Victim", ]
dur_fo_sus = dur_fo_full[dur_fo_full$Role %in% c("Suspect", "Offender"), ]
dur_df = read_excel("FinalData/dur_comparison_sample.xlsx", sheet=1)
any(dur_df$victim_ID...1!=dur_df$victim_ID...19)
dur_df = dur_df[, -which(names(dur_df) == "victim_ID...19")]
names(dur_df)[which(names(dur_df) == "victim_ID...1")] = "victim_ID"
df_dur_incID = data.frame(Incident_ID = dur_df$Incident_ID)
df_dur_dates = left_join(df_dur_incID, dur_fo_sus, by = join_by(Incident_ID == `SAF URN`))
df_dur_dates = unique(df_dur_dates[ ,c("Incident_ID", "Date From")])
dur_df = dur_df[dur_df$Incident_ID!="NA", ]
dur_df = left_join(dur_df, df_dur_dates, by = join_by(Incident_ID))
names(dur_df)[which(names(dur_df) == "Date From")] = "date_latest"
dur_df$n_fo_dyad = rep(0, nrow(dur_df))
dur_df$n_fo_sus = rep(0, nrow(dur_df))
for (i in 1:nrow(dur_df)){
vicID_i = dur_df$victim_ID[i]
susID_i = dur_df$suspect_ID[i]
incID_i = dur_df$Incident_ID[i]
date_ref_i = dur_df$date_latest[i]
fo_df_sus_i = dur_fo_sus[dur_fo_sus$`Person URN` == susID_i, ]
fo_df_sus_i = fo_df_sus_i[fo_df_sus_i$`SAF URN`!=incID_i, ]
fo_df_sus_i = fo_df_sus_i[fo_df_sus_i$`Date From`>date_ref_i, ]
fo_df_sus_i = fo_df_sus_i[difftime(date_ref_i, fo_df_sus_i$`Date From`, units="weeks") <= 26,  ]
incs_fo_sus = fo_df_sus_i$`SAF URN`
dur_df$n_fo_sus[i] = length(unique(incs_fo_sus))
fo_sus_vics = dur_fo_vic[dur_fo_vic$`SAF URN`%in%incs_fo_sus, ]
incs_fo_dyad = fo_sus_vics$`SAF URN`[fo_sus_vics$`Person URN` == vicID_i]
dur_df$n_fo_dyad[i] = length(unique(incs_fo_dyad))
}
ggplot(data = dur_df, aes(x=n_fo_sus, fill = FM_equip)) +
geom_histogram(position = "dodge") +
theme_bw() +
xlab("Number of follow-on incidents (by suspect)")
ggplot(data = dur_df, aes(x=n_fo_dyad, fill = FM_equip)) +
geom_histogram(position = "dodge") +
theme_bw() +
xlab("Number of follow-on incidents (by dyad)")
dur_df$warning_YN[dur_df$warning_YN == "NA"] = "No"
dur_df$risk_ass[dur_df$risk_ass == "NA"] = NA
dur_df$protection_order[dur_df$protection_order == "NO"] = "No"
dur_df$protection_order[dur_df$protection_order == "YES"] = "Yes"
dur_df$protection_order[dur_df$protection_order == "NA"] = NA
save(dur_df, file = "FinalData/dur_df.Rdata")
table(dur_df$risk_ass)
dur_fm1 = stan_glm(
n_fo_dyad ~ FM_equip + CoC + risk_ass + protection_order + nprev_sus,
family = neg_binomial_2,
data = dur_df[dur_df$risk_ass!="Standard", ]
)
print(dur_fm1, digits = 2)
yrep = posterior_predict(dur_fm1)
n_sims = nrow(yrep)
subset = sample(n_sims, 100)
ppc_dens_overlay(log10(dur_df$n_fo_dyad[dur_df$risk_ass!="Standard"]), log10(yrep[subset, ]))
ppc_dens_overlay(log10(dur_df$n_fo_dyad[dur_df$risk_ass!="Standard"]+1), log10(yrep[subset, ]+1))
dim(yrep)
length(dur_df$n_fo_dyad[dur_df$risk_ass!="Standard"])
?ppc_dens_overlay
plot(dur_fm1)
vif(dur_fm1)
dur_warn1 = stan_glm(
n_fo_dyad ~ warning_YN + CoC + risk_ass + protection_order + nprev_sus,
family = neg_binomial_2,
data = dur_df[dur_df$risk_ass!="Standard", ]
)
print(dur_warn1, digits = 2)
yrep = posterior_predict(dur_warn1)
yrep = posterior_predict(dur_warn1)
n_sims = nrow(yrep)
subset = sample(n_sims, 100)
ppc_dens_overlay(log10(dur_df$n_fo_dyad[dur_df$risk_ass!="Standard"]), log10(yrep[subset, ]))
plot(dur_warn1)
length(fitted(dur_warn1))
dim(dur_df)
summary(dur_df[ ,c("warning_YN", "CoC", "risk_ass", "protection_order", "nprev_sus")])
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(gridExtra)
library(kableExtra)
library(readr)
library(readxl)
library(tidyverse)
library(visdat)
library(reshape2)
library(car)
library(gtsummary)
library(rstanarm)
library(glmtoolbox)
setwd("/Users/rachelo/OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/")
## The issue is that it had been sorted, so this has messed up the column orders and row orders
wy_int_fo_prev = read_excel(
"FinalData/wy_int_for_follow_on - Completed.xlsx", sheet = 3)
wy_int = read_excel("FinalData/wy_int_for_follow_on - Completed.xlsx", sheet = 1)
wy_int_ra = read_excel("FinalData/wy_noRA - Completed.xlsx")
names(wy_int_fo_prev)[c(2,4)] = c("suspect_ID", "victim_ID")
summary(wy_int_fo_prev)
table(wy_int$risk_ass)
for (i in 1:nrow(wy_int_ra)){
vicID_i = wy_int_ra$victim_ID[i]
wy_int$risk_ass[wy_int$victim_ID == vicID_i] = toupper(wy_int_ra$risk_ass[i])
}
table(wy_int$risk_ass)
n_fo_sus = rep(0, nrow(wy_int))
n_fo_dyad = rep(0, nrow(wy_int))
for (i in 1:nrow(wy_int)){
vicID_i = wy_int$victim_ID[i]
susID_i = wy_int$suspect_ID[i]
int_fo_sub_sus = wy_int_fo_prev[(wy_int_fo_prev$suspect_ID == susID_i), ]
int_fo_sub_dyad = wy_int_fo_prev[
((wy_int_fo_prev$victim_ID == vicID_i)&(wy_int_fo_prev$suspect_ID == susID_i)),
]
n_fo_sus[i] = length(unique(int_fo_sub_sus$crime_ref))
n_fo_dyad[i] = length(unique(int_fo_sub_dyad$crime_ref))
}
wy_int$n_fo_sus = n_fo_sus
wy_int$n_fo_dyad = n_fo_dyad
ggplot(data = wy_int, aes(x=n_fo_sus)) +
geom_histogram(aes(y = after_stat(count / sum(count)))) +
scale_y_continuous(labels = scales::percent) +
ylab("Percentage of suspects") +
ggtitle("Follow-on involving same suspect") +
xlab("Number of follow-on incidents (same suspect)") + xlim(-0.5,8)
ggplot(data = wy_int, aes(x=(n_fo_dyad))) +
geom_histogram(aes(y = after_stat(count / sum(count)))) +
scale_y_continuous(labels = scales::percent) +
ylab("Percentage of dyads") +
ggtitle("Follow-on involving same dyad")+
xlab("Number of follow-on incidents (same dyad)") +
xlim(-0.5,8)
wy_comp_po = read_excel("FinalData/wy_po_reduced - Completed v2.0.xlsx", sheet=1)
wy_comp_prev = read_excel("FinalData/wy_po_reduced - Completed v2.0.xlsx", sheet=2)
wy_comp_po$protection_order[wy_comp_po$protection_order=="Y"] = "Yes"
wy_comp_po$protection_order[wy_comp_po$protection_order=="N"] = "No"
wy_comp_po$n_fo_sus = 0
wy_comp_po$n_fo_dyad = 0
wy_comp_po$warning_YN = "No" # for use in model later
wy_int$nprev_sus[wy_int$nprev_sus == "NA"] = 0
wy_int$nprev_sus = as.numeric(wy_int$nprev_sus)
wy_int$suspect_age = as.numeric(wy_int$suspect_age)
wy_int$propensity_score = as.numeric(wy_int$propensity_score)
wy_full = rbind(wy_int, wy_comp_po)
psm_test_wy1 = glm(
FM_equip ~ suspect_age + suspect_sex + category  + nprev_sus + risk_ass + CoC_susprev + violent_SO_susprev + protection_order,
data = wy_full,
family = binomial(link="logit"))
summary(psm_test_wy1)
tbl_regression(psm_test_wy1)
psm_wy_final = glm(
FM_equip ~ CoC + violent_SO + risk_ass + CoC_susprev + violent_SO_susprev + protection_order,
data = wy_full,
family = binomial(link="logit"))
vif(psm_wy_final)
tbl_regression(psm_wy_final)
wy_ps_final = predict(
object = psm_wy_final,
newdata = wy_full,
type = "response"
)
wy_full$ps_final = wy_ps_final
ggplot(data = wy_full, aes(x=propensity_score, y=ps_final, col=protection_order))+
geom_point() + xlab("Preliminary prop score") + ylab("Final prop score")
ggplot(data = wy_full, aes(x=ps_final, fill = FM_equip)) +
geom_histogram(position = "dodge")
min_ps_int = min(wy_full$ps_final[wy_full$FM_equip == T])
wy_full = wy_full[wy_full$ps_final >= min_ps_int,]
ggplot(data = wy_full, aes(x=ps_final, fill = FM_equip)) +
geom_histogram(position = "dodge")
wy_comp_final = wy_full[wy_full$FM_equip == F,]
n_fo_sus_comp = rep(0, nrow(wy_comp_final))
n_fo_dyad_comp = rep(0, nrow(wy_comp_final))
for (i in 1:nrow(wy_comp_final)){
vicID_i = wy_comp_final$victim_ID[i]
susID_i = wy_comp_final$suspect_ID[i]
comp_fo_sub_sus = wy_comp_prev[(wy_comp_prev$susp_id == susID_i), ]
comp_fo_sub_dyad = wy_comp_prev[
((wy_comp_prev$vic_id == vicID_i)&(wy_comp_prev$susp_id == susID_i)),
]
n_fo_sus_comp[i] = length(unique(comp_fo_sub_sus$crime_ref))
n_fo_dyad_comp[i] = length(unique(comp_fo_sub_dyad$crime_ref))
}
wy_comp_final$n_fo_sus = n_fo_sus_comp
wy_comp_final$n_fo_dyad = n_fo_dyad_comp
ggplot(data = wy_comp_final, aes(x=n_fo_sus)) +
geom_histogram(aes(y = after_stat(count / sum(count)))) +
scale_y_continuous(labels = scales::percent) +
ylab("Percentage of suspects") +
ggtitle("Follow-on involving same suspect") +
xlab("Number of follow-on incidents (same suspect)") +
xlim(-0.5,10)
ggplot(data = wy_comp_final, aes(x=(n_fo_dyad))) +
geom_histogram(aes(y = after_stat(count / sum(count)))) +
scale_y_continuous(labels = scales::percent) +
ylab("Percentage of dyads") +
ggtitle("Follow-on involving same dyad")+
xlab("Number of follow-on incidents (same dyad)") +
xlim(-0.5,10)
for (i in 1:nrow(wy_comp_final)){
sus_i = wy_comp_final$suspect_ID[i]
vic_i = wy_comp_final$victim_ID[i]
wy_full$n_fo_dyad[(wy_full$victim_ID == vic_i)&(wy_full$suspect_ID == sus_i)] = wy_comp_final$n_fo_dyad[i]
wy_full$n_fo_sus[(wy_full$victim_ID == vic_i)&(wy_full$suspect_ID == sus_i)] = wy_comp_final$n_fo_sus[i]
}
ggplot(data = wy_full, aes(x=n_fo_dyad, fill = FM_equip)) +
geom_bar(position="dodge") +
xlab("Number of follow-on incidents involving same dyad")
ggplot(data = wy_full, aes(x=n_fo_sus, fill = FM_equip)) +
geom_bar(position="dodge") +
xlab("Number of follow-on incidents involving same suspect")
table(wy_full$category, useNA = "always")
table(wy_full$FM_equip, useNA = "always")
table(wy_full$warning_YN, useNA = "always")
table(wy_full$protection_order, useNA = "always")
table(wy_full$risk_ass, useNA = "always")
table(wy_full$nprev_sus, useNA = "always")
table(wy_full$violent_SO_susprev, useNA = "always")
table(wy_full$CoC_susprev, useNA = "always")
table(wy_full$suspect_sex, useNA = "always")
table(wy_full$n_fo_sus, useNA = "always")
table(wy_full$n_fo_dyad, useNA = "always")
wy_full$category = as.factor(wy_full$category)
wy_full$suspect_sex = as.factor(wy_full$suspect_sex)
wy_full$warning_YN = as.factor(wy_full$warning_YN)
wy_full$risk_ass
wy_full = wy_full %>% mutate(across(c(category, suspect_sex, warning_YN, risk_ass, protection_order), factor))
vis_dat(wy_full, sort_type = F)
glm_wy1 = glm(
n_fo_dyad ~ FM_equip + FM_equip:warning_YN + suspect_sex + category + protection_order + risk_ass + nprev_sus + CoC_susprev + violent_SO_susprev,
family = "poisson"(link = "log"),
data = wy_full)
summary(glm_wy1)
glm_wy2 = glm(
n_fo_dyad ~ FM_equip + FM_equip:warning_YN + category + protection_order + risk_ass + nprev_sus + CoC_susprev + violent_SO_susprev,
family = "poisson"(link = "log"),
data = wy_full)
summary(glm_wy2)
glm_wy_noint = glm(
n_fo_dyad ~ FM_equip + category + protection_order + risk_ass + nprev_sus + CoC_susprev + violent_SO_susprev,
family = "poisson"(link = "log"),
data = wy_full)
summary(glm_wy_noint)
vif(glm_wy_noint)
glm_wy3 = glm(
n_fo_dyad ~ FM_equip + FM_equip:warning_YN + category + protection_order + risk_ass + nprev_sus,
family = "poisson"(link = "log"),
data = wy_full)
summary(glm_wy3)
glm_wy4 = glm(
n_fo_dyad ~ FM_equip + FM_equip:warning_YN + CoC + protection_order + risk_ass + nprev_sus,
family = "poisson"(link = "log"),
data = wy_full)
summary(glm_wy4)
nb_wy_fm1 = MASS::glm.nb(
n_fo_dyad ~ FM_equip + CoC + protection_order + risk_ass + nprev_sus,
data = wy_full)
summary(nb_wy_fm1)
nb_wy_w1 = MASS::glm.nb(
n_fo_dyad ~ warning_YN + CoC + protection_order + risk_ass + nprev_sus,
data = wy_full)
summary(nb_wy_w1)
glm_wy5 = glm(
n_fo_dyad ~ FM_equip + CoC + breach + protection_order + risk_ass + nprev_sus,
family = "poisson"(link = "log"),
data = wy_full)
summary(glm_wy5)
glm_wy6 = glm(
n_fo_dyad ~ warning_YN + breach + CoC + protection_order + risk_ass + nprev_sus,
family = "poisson"(link = "log"),
data = wy_full)
summary(glm_wy6)
plot(resid(glm_wy5) ~ wy_full$n_fo_dyad, main = "Residuals against true")
plot(resid(glm_wy5)~fitted(glm_wy5), main = "Residuals against fitted")
hist(fitted(glm_wy5), main = "histogram of fitted values")
hist(wy_full$n_fo_dyad, main = "histogram of true values")
plot(resid(glm_wy6) ~ wy_full$n_fo_dyad, main = "Residuals against true")
plot(resid(glm_wy6)~fitted(glm_wy6), main = "Residuals against fitted")
hist(fitted(glm_wy6), main = "histogram of fitted values")
hamps_full = read_excel("FinalData/Hamps_PSM_comparisongroup_3Feb Hampshire Reviewed.xlsx", sheet = 1)
hamps_int_new = read_excel("FinalData/Hamps_PSM_comparisongroup_3Feb Hampshire Reviewed.xlsx", sheet = 2)
hamps_new_df = data.frame(
victim_ID = hamps_int_new$Victim_ID,
victim_sex = hamps_int_new$`victim sex`,
victim_age = hamps_int_new$`Victim age at time of incident`,
victim_ethnicity = hamps_int_new$`victim ethnicity (where recorded)`,
suspect_ID = hamps_int_new$Suspect_ID,
suspect_sex = hamps_int_new$`Suspect Sex`,
suspect_age = hamps_int_new$`Suspect Age (at time of incident)`,
suspect_ethnicity = hamps_int_new$`Suspect ethnicity`,
police_force = hamps_int_new$`Police force`,
police_district = hamps_int_new$`district recoded`,
date_latest = hamps_int_new$`Date of Incident that has resulted in product(s) being offered (Latest date)`,
incident_type_raw = hamps_int_new$`INCIDENT TYPE RECODED`,
category = c("CoC", "CoC", "theft_CD"),
violent_SO = rep(FALSE, 3),
CoC = c(TRUE, TRUE, FALSE),
theft_CD = c(FALSE, FALSE, TRUE),
breach = rep(FALSE, 3),
Incident_ID = hamps_int_new$`RMS No`,
FM_equip = rep(TRUE, 3),
warning_YN = c("No", NA, "Yes"),
risk_ass = rep("HIGH", 3),
protection_order = rep("TRUE", 3),
nprev_sus = hamps_int_new$`no of previous offences`,
typeprev_sus = hamps_int_new$`Suspect - previous DA incidents over the past 12 months (incident type) - Incident types seperated by ";"`,
CoC_susprev = c(FALSE, TRUE, FALSE),
violent_SO_susprev = c(TRUE, TRUE, FALSE),
propensity_score = rep(NA, 3),
propensity_score3 = rep(NA, 3)
)
names(hamps_full)[c(1,5)] = c("victim_ID", "suspect_ID")
hamps_full = rbind(hamps_full, hamps_new_df)
hamps_full$protection_order[hamps_full$protection_order == "NA"] = NA
hamps_full$police_force = "Hampshire"
hamps_full$warning_YN[hamps_full$FM_equip == FALSE]= "No"
hamps_fo = read_excel("FinalData/Hamps_Domestic - Performance Summary Phase 3 Final.xlsx", sheet=1, skip=2)
n_fo_sus = rep(0, nrow(hamps_full))
n_fo_dyad = rep(0, nrow(hamps_full))
for (i in 1:nrow(hamps_full)){
vicID_i = hamps_full$victim_ID[i]
susID_i = hamps_full$suspect_ID[i]
fo_sub_sus = hamps_fo[(hamps_fo$`Suspect C Nominal No` == susID_i), ]
fo_sub_dyad = hamps_fo[
((hamps_fo$`Victim C Nominal Number` == vicID_i)&(hamps_fo$`Suspect C Nominal No` == susID_i)),
]
n_fo_sus[i] = nrow(fo_sub_sus)
n_fo_dyad[i] = nrow(fo_sub_dyad)
}
hamps_full$n_fo_sus = n_fo_sus
hamps_full$n_fo_dyad = n_fo_dyad
hamps_full$n_fo_dyad[is.na(hamps_full$n_fo_dyad)] = 0
hamps_full$n_fo_sus[is.na(hamps_full$n_fo_sus)] = 0
ggplot(data=hamps_full, aes(x=n_fo_dyad, fill = FM_equip)) +
geom_histogram(position = "dodge") +
xlab("Follow-on incidents for same dyad")
ggplot(data=hamps_full, aes(x=n_fo_sus, fill = FM_equip)) +
geom_histogram(position = "dodge") +
xlab("Follow-on incidents for same suspect")
psm_hamps_final = glm(
FM_equip ~ CoC  + nprev_sus + risk_ass + CoC_susprev + protection_order,
data = hamps_full,
family = binomial(link="logit"))
vif(psm_hamps_final)
tbl_regression(psm_hamps_final)
hamps_po_final = predict(
object = psm_hamps_final,
newdata = hamps_full,
type = "response"
)
hamps_full$ps_final = hamps_po_final
ggplot(data=hamps_full, aes(x=ps_final, fill = FM_equip)) +
geom_histogram(position = "dodge")
table(hamps_full$protection_order)
hamps_full = hamps_full[hamps_full$ps_final > 0.1,]
hamps_full = hamps_full[!is.na(hamps_full$victim_ID),]
ggplot(data=hamps_full, aes(x=ps_final, fill = FM_equip)) +
geom_histogram(position = "dodge")
table(hamps_full$protection_order)
hamps_wy = rbind(hamps_full[,-c(27,28)], wy_full[ ,-27])
dur_fo1= read_excel("FinalData/Dur Op Wicker follow on data dump anon.xlsx")
dur_fo2 = read_excel("FinalData/Dur Raw data draw comparison data from here RIR 031 34 - Op Wicker data FINAL.xlsx", sheet=3)
any(names(dur_fo1)!=names(dur_fo2))
names_fo1match = names(dur_fo1)[names(dur_fo1) %in% names(dur_fo2)]
names_fo1match
dur_fo1_res = dur_fo1[, names(dur_fo1) %in% names(dur_fo2) ]
dur_fo2_res = dur_fo2[, dput(names_fo1match)]
dur_fo_full = rbind(dur_fo1_res, dur_fo2_res)
table(dur_fo_full$Role)
dur_fo_vic = dur_fo_full[dur_fo_full$Role == "Victim", ]
dur_fo_sus = dur_fo_full[dur_fo_full$Role %in% c("Suspect", "Offender"), ]
dur_df = read_excel("FinalData/dur_comparison_sample.xlsx", sheet=1)
any(dur_df$victim_ID...1!=dur_df$victim_ID...19)
dur_df = dur_df[, -which(names(dur_df) == "victim_ID...19")]
names(dur_df)[which(names(dur_df) == "victim_ID...1")] = "victim_ID"
df_dur_incID = data.frame(Incident_ID = dur_df$Incident_ID)
df_dur_dates = left_join(df_dur_incID, dur_fo_sus, by = join_by(Incident_ID == `SAF URN`))
df_dur_dates = unique(df_dur_dates[ ,c("Incident_ID", "Date From")])
dur_df = dur_df[dur_df$Incident_ID!="NA", ]
dur_df = left_join(dur_df, df_dur_dates, by = join_by(Incident_ID))
names(dur_df)[which(names(dur_df) == "Date From")] = "date_latest"
dur_df$n_fo_dyad = rep(0, nrow(dur_df))
dur_df$n_fo_sus = rep(0, nrow(dur_df))
for (i in 1:nrow(dur_df)){
vicID_i = dur_df$victim_ID[i]
susID_i = dur_df$suspect_ID[i]
incID_i = dur_df$Incident_ID[i]
date_ref_i = dur_df$date_latest[i]
fo_df_sus_i = dur_fo_sus[dur_fo_sus$`Person URN` == susID_i, ]
fo_df_sus_i = fo_df_sus_i[fo_df_sus_i$`SAF URN`!=incID_i, ]
fo_df_sus_i = fo_df_sus_i[fo_df_sus_i$`Date From`>date_ref_i, ]
fo_df_sus_i = fo_df_sus_i[difftime(date_ref_i, fo_df_sus_i$`Date From`, units="weeks") <= 26,  ]
incs_fo_sus = fo_df_sus_i$`SAF URN`
dur_df$n_fo_sus[i] = length(unique(incs_fo_sus))
fo_sus_vics = dur_fo_vic[dur_fo_vic$`SAF URN`%in%incs_fo_sus, ]
incs_fo_dyad = fo_sus_vics$`SAF URN`[fo_sus_vics$`Person URN` == vicID_i]
dur_df$n_fo_dyad[i] = length(unique(incs_fo_dyad))
}
ggplot(data = dur_df, aes(x=n_fo_sus, fill = FM_equip)) +
geom_histogram(position = "dodge") +
theme_bw() +
xlab("Number of follow-on incidents (by suspect)")
ggplot(data = dur_df, aes(x=n_fo_dyad, fill = FM_equip)) +
geom_histogram(position = "dodge") +
theme_bw() +
xlab("Number of follow-on incidents (by dyad)")
table(dur_df$warning_YN)
table(dur_dfFM_equip)
table(dur_df$FM_equip)
dur_df$warning_YN[dur_df$warning_YN == "NA"] = "No"
table(dur_df$FM_equip)
table(dur_df$warning_YN)
dur_df$risk_ass[dur_df$risk_ass == "NA"] = NA
dur_df$protection_order[dur_df$protection_order == "NO"] = "No"
dur_df$protection_order[dur_df$protection_order == "YES"] = "Yes"
dur_df$protection_order[dur_df$protection_order == "NA"] = NA
table(dur_df$warning_YN)
save(dur_df, file = "FinalData/dur_df.Rdata")
summary(dur_df[ ,c("FM_equip", "warning_YN", "CoC", "risk_ass", "protection_order", "nprev_sus")])
dur_df$warning_YN = as.factor(dur_df$warning_YN)
dur_df$risk_ass = as.factor(dur_df$risk_ass)
dur_df$protection_order = as.factor(dur_df$protection_order)
save(dur_df, file = "FinalData/dur_df.Rdata")
summary(dur_df[ ,c("FM_equip", "warning_YN", "CoC", "risk_ass", "protection_order", "nprev_sus")])
dur_fm1 = stan_glm(
n_fo_dyad ~ FM_equip + CoC + risk_ass + protection_order + nprev_sus,
family = neg_binomial_2,
data = dur_df[dur_df$risk_ass!="Standard", ]
)
vif(dur_fm1)
print(dur_fm1, digits = 2)
yrep = posterior_predict(dur_fm1)
yrep = posterior_predict(dur_fm1)
n_sims = nrow(yrep)
subset = sample(n_sims, 100)
log10_dyad = log10((dur_df$n_fo_dyad[dur_df$risk_ass!="Standard"])&(!is.na(dur_df$risk_ass)))
ppc_dens_overlay(log10_dyad, log10(yrep[subset, ]))
log10_dyad = log10((dur_df$n_fo_dyad[(dur_df$risk_ass!="Standard")&(!is.na(dur_df$risk_ass))]))
ppc_dens_overlay(log10_dyad, log10(yrep[subset, ]))
log10_dyad = log10((dur_df$n_fo_dyad[(dur_df$risk_ass!="Standard")&(!is.na(dur_df$risk_ass))]))
length(log10_dyad)
dim(yrep)
log10_dyad = log10((dur_df$n_fo_dyad[
(dur_df$risk_ass!="Standard")&(!is.na(dur_df$risk_ass))&(!is.na(dur_df$protection_order))
]))
ppc_dens_overlay(log10_dyad, log10(yrep[subset, ]))
ppc_dens_overlay(wy_full$n_fo_dyad, yrep_1[subset, ])
ppc_dens_overlay(log10(wy_full$n_fo_dyad), log10(yrep_1[subset, ]), discrete=T)
ppc_ecdf_overlay(wy_full$n_fo_dyad, yrep_1[subset, ], discrete=T)
ppc_ecdf_overlay(log10(wy_full$n_fo_dyad), log10(yrep_1[subset, ]), discrete=T)
q()
