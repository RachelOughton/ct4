data = hamps_femvic,
family = binomial(link="logit"))
tbl_regression(psm_femvic_po)
psm_fitted_femvic_po = predict(
object = psm_femvic_po,
newdata = hamps_femvic,
type = "response"
)
hamps_femvic$prop_score_po = psm_fitted_femvic_po
ggplot(data=hamps_femvic, aes(x=prop_score_po, fill = FM_equip)) +
geom_histogram(position = "dodge") +
xlab("Propensity Score (with protection order)") + scale_x_continuous(breaks = seq(0,1,by=0.1))
summary(hamps_femvic$protect)
summary(hamps_femvic$protection_order[hamps_femvic$FM_equip == T])
hamps_po = hamps_femvic[hamps_femvic$protection_order, ]
summary(hamps_po)
hamps_po = hamps_femvic[hamps_femvic$protection_order, ]
psm_po = glm(
FM_equip ~ victim_age + suspect_age + CoC  + sus_nprev + risk_ass + violent_SO_susprev + CoC_susprev,
data = hamps_po,
family = binomial(link="logit"))
tbl_regression(psm_po)
psm_fitted_po = predict(
object = psm_po,
newdata = hamps_po,
type = "response"
)
hamps_po$prop_score_po_only = psm_fitted_po
ggplot(data=hamps_po, aes(x=prop_score_po_only, fill = FM_equip)) +
geom_histogram(position = "dodge") +
xlab("Propensity Score (people with protection order only)") + scale_x_continuous(breaks = seq(0,1,by=0.1))
hamps_po[hamps_po$prop_score_po_only>0.9, c("victim_ID", "victim_age" , "suspect_age", "CoC", "sus_nprev", "risk_ass", "violent_SO_susprev", "CoC_susprev")]
na.omit(hamps_po[hamps_po$prop_score_po_only>0.9, c("victim_ID", "victim_age" , "suspect_age", "CoC", "sus_nprev", "risk_ass", "violent_SO_susprev", "CoC_susprev")])
na.omit(hamps_po[hamps_po$prop_score_po_only>0.9, c("victim_ID", "victim_age" , "suspect_age", "CoC", "sus_nprev", "risk_ass", "violent_SO_susprev", "CoC_susprev", "prop_score_po_only")])
hamps_femvic[hamps_femvic$FM_equip == Y]
hamps_femvic[hamps_femvic$FM_equip == "Y",]
summary(hamps_femvic)
summary(hamps_femvic[hamps_femvic$FM_equip,])
inc_type_hamps = read.csv("Hampshire/inc_types_hamps.csv", header=T)
inc_type_hamps
library(ggplot2)
library(gridExtra)
library(gridExtra)
library(kableExtra)
library(readr)
library(readr)
library(readxl)
library(tidyverse)
library(tidyverse)
library(visdat)
library(reshape2)
library(gtsummary)
setwd("OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/")
getwd()
setwd("/Users/rachelo/OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/")
# setwd("/Users/rachelo/OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/")
hamps = read.csv("Hampshire/Anonymised- Op Sentry - Stage 1 Hampshire Complete RE(REVISEDproject management data).csv", header=T)
# Row 26 imports even though it doesn't contain anything
hamps = hamps[-26,]
str(hamps)
summary(hamps)
unique(hamps$INCIDENT.TYPE.RECODED)
hamps_df = data.frame(victim_ID = na.omit(hamps$Victim.Unique.ID..CoP.))
hamps_df$victim_sex = factor(hamps$victim.sex, levels = c("Female", "Male"))
table(hamps_df$victim_sex)
hamps_df$victim_sex = factor(hamps$victim.sex, levels = c("Female", "Male"))
table(hamps_df$victim_sex)
For info, some are listed as being current partners:
```{r}
table(hamps$Relationship.to.victim..partner.or.ex.partner.)
hamps_df$victim_ethnicity = gsub("Not recorded", NA, hamps$victim.ethnicity..where.recorded.)
table(hamps_df$victim_ethnicity)
hamps_df$victim_age = hamps$Victim.age.at.time.of.incident
ggplot(data=hamps_df, aes(x=victim_age, fill = victim_sex)) +
geom_histogram(bins =10) + xlab("Victim age") + theme_bw()
hamps_df$suspect_ID = hamps$Suspect.Unique.ID
hamps_df$suspect_sex = factor(hamps$Suspect.Sex, levels = c("Female", "Male"))
hamps_df$suspect_ethnicity = gsub("Not recorded", NA, hamps$Suspect.ethnicity)
hamps_df$suspect_age = hamps$Suspect.Age..at.time.of.incident.
table(hamps_df$suspect_sex)
table(hamps_df$suspect_ethnicity)
ggplot(data=hamps_df, aes(x=suspect_age, fill = suspect_sex)) +
geom_histogram(bins=10) + xlab("Suspect age") + theme_bw()
ggplot(data=hamps_df, aes(
x=victim_age, y=suspect_age,
pch = victim_sex, col=suspect_sex)) +
geom_point() + xlab("Victim age") + ylab("Suspect age") +
theme_bw() + geom_abline(intercept=0,slope=1, lwd=0.3, lty=2)
cor(x=hamps_df$victim_age, y=hamps_df$suspect_age)
cor(x=hamps_df$victim_age[hamps_df$victim_sex == "Female"],
y=hamps_df$suspect_age[hamps_df$victim_sex == "Female"])
ggplot(data=hamps_df, aes(
x=victim_age, y=suspect_age,
pch = victim_sex, col=suspect_ethnicity)) +
geom_point() + xlab("Victim age") + ylab("Suspect age") +
theme_bw() + geom_abline(intercept=0,slope=1, lwd=0.3, lty=2)
hamps_df$police_force = hamps$Police.force
hamps_df$police_district = gsub("^New Forest.+", "New Forest", hamps_df$police_district) # tidy up New Forest
table(hamps_df$police_district)
hamps_df$police_force = hamps$Police.force
hamps_df$police_district = hamps$Police.force.district.of.address.where.products.are.issued
hamps_df$police_district
date1 = hamps$Date.of.Incident.that.has.resulted.in.product.s..being.offered
date_latest = as.Date(hamps$Date.of.Incident.that.has.resulted.in.product.s..being.offered..Latest.date., format = "%d/%m/%Y")
date_warning = as.Date(hamps$Date.warning.delivered, format = "%d/%m/%Y")
dates = data.frame(VID = hamps_df$victim_ID, date = date1, latest = date_latest, warning=date_warning)
dates
time_diff = dates$warning - dates$latest
ggplot(data=NULL) + geom_histogram(aes(x=as.numeric(time_diff)), bins=10)+
xlab("Time difference from incident to warning (days)") + theme_bw()
hamps_df$incident_type_princ = hamps$INCIDENT.TYPE.RECODED
type_df
type_df = read.csv(file = "Hampshire/inc_types_hamps.csv", header=T)
summary(type_Df)
summary(type_df)
type_df
hamps_df$incident_type_princ = hamps$INCIDENT.TYPE.RECODED
unique(hamps_df$incident_type_princ)
hamps_df$incident_type_princ = toupper(hamps$INCIDENT.TYPE.RECODED)
unique(hamps_df$incident_type_princ)
type_df = read.csv(file = "Hampshire/inc_types_hamps.csv", header=T)
type_df
hamps_df$incident_type_princ = toupper(hamps$INCIDENT.TYPE.RECODED)
violent_types = type_df$type[type_df$category == "violent_SO"]
CoC_types = type_df$type[type_df$category == "CoC"]
theft_types = type_df$type[type_df$category == "theft_CD"]
hamps_df$violent_SO = rep(NA, nrow(hamps_df))
hamps_df$CoC = rep(NA, nrow(hamps_df))
hamps_df$theft_CD = rep(NA, nrow(hamps_df))
hamps_df$breach = rep(NA, nrow(hamps_df))
for (i in 1:nrow(hamps_df)){
types_i = hamps$INCIDENT.TYPE.RECODED[i]
hamps_df$violent_SO[i] = any(types_i %in% violent_types)
hamps_df$CoC[i] = any(types_i %in% CoC_types)
hamps_df$theft_CD[i] = any(types_i %in% theft_types)
hamps_df$breach[i] = FALSE # NO BREACH DATA IN HAMPSHIRE?!
}
kable(hamps_df[,c("incident_type_princ", "violent_SO", "CoC", "theft_CD", "breach")])
for (i in 1:nrow(hamps_df)){
types_i = toupper(hamps$INCIDENT.TYPE.RECODED[i])
hamps_df$violent_SO[i] = any(types_i %in% violent_types)
hamps_df$CoC[i] = any(types_i %in% CoC_types)
hamps_df$theft_CD[i] = any(types_i %in% theft_types)
hamps_df$breach[i] = FALSE # NO BREACH DATA IN HAMPSHIRE?!
}
kable(hamps_df[,c("incident_type_princ", "violent_SO", "CoC", "theft_CD", "breach")])
violent_types
names(type_df)
violent_types = type_df$inc_type[type_df$category == "violent_SO"]
CoC_types = type_df$inc_type[type_df$category == "CoC"]
theft_types = type_df$inc_type[type_df$category == "theft_CD"]
CoC_types
hamps_df$violent_SO = rep(NA, nrow(hamps_df))
hamps_df$CoC = rep(NA, nrow(hamps_df))
hamps_df$theft_CD = rep(NA, nrow(hamps_df))
hamps_df$breach = rep(NA, nrow(hamps_df))
for (i in 1:nrow(hamps_df)){
types_i = toupper(hamps$INCIDENT.TYPE.RECODED[i])
hamps_df$violent_SO[i] = any(types_i %in% violent_types)
hamps_df$CoC[i] = any(types_i %in% CoC_types)
hamps_df$theft_CD[i] = any(types_i %in% theft_types)
hamps_df$breach[i] = FALSE # NO BREACH DATA IN HAMPSHIRE?!
}
kable(hamps_df[,c("incident_type_princ", "violent_SO", "CoC", "theft_CD", "breach")])
inc_types = sort(unique(c(hamps_comp4_IP$Occ_Type_aggprev, hamps_comp5_IP$Occ_Type_susprev)))
inc_types = sort(unique(c(hamps_comp4_IP$Occ_Type_aggprev, hamps_comp5_IP$Occ_Type_susprev)))
inc_types
hamps_po$prop_score_po_only<0.1
is.na(hamps_po$victim_age)
sum(is.na(hamps_po$victim_age))
sum(is.na(hamps_po$suspect_age))
hamps_po
dim(hamps_po)
hamps_po[is.na(hamps_po$victim_age),]
q()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(gridExtra)
library(kableExtra)
library(readr)
library(readxl)
library(tidyverse)
library(visdat)
library(reshape2)
library(gtsummary)
# setwd("/Users/rachelo/OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/")
hamps = read.csv("Hampshire/Anonymised- Op Sentry - Stage 1 Hampshire Complete RE(REVISEDproject management data).csv", header=T)
# Row 26 imports even though it doesn't contain anything
hamps = hamps[-26,]
hamps
hamps_df = data.frame(victim_ID = na.omit(hamps$Victim.Unique.ID..CoP.))
hamps_df
hamps_df$victim_ethnicity = gsub("Not recorded", NA, hamps$victim.ethnicity..where.recorded.)
table(hamps_df$victim_ethnicity)
hamps_df
hamps_df$victim_age = hamps$Victim.age.at.time.of.incident
hamps_df$police_force = hamps$Police.force
hamps_df$police_district = gsub("^New Forest.+", "New Forest", hamps_df$police_district) # tidy up New Forest
hamps_df$police_force = hamps$Police.force
hamps_df$police_district = hamps$Police.force.district.of.address.where.products.are.issued
hamps_df$police_district = gsub("^New Forest.+", "New Forest", hamps_df$police_district) # tidy up New Forest
table(hamps_df$police_district)
date1 = hamps$Date.of.Incident.that.has.resulted.in.product.s..being.offered
date_latest = as.Date(hamps$Date.of.Incident.that.has.resulted.in.product.s..being.offered..Latest.date., format = "%d/%m/%Y")
date_warning = as.Date(hamps$Date.warning.delivered, format = "%d/%m/%Y")
dates = data.frame(VID = hamps_df$victim_ID, date = date1, latest = date_latest, warning=date_warning)
hamps_df$date_latest = date_latest
hamps_df
type_df = read.csv(file = "Hampshire/inc_types_hamps.csv", header=T)
hamps_df$incident_type_princ = toupper(hamps$INCIDENT.TYPE.RECODED)
violent_types = type_df$inc_type[type_df$category == "violent_SO"]
CoC_types = type_df$inc_type[type_df$category == "CoC"]
theft_types = type_df$inc_type[type_df$category == "theft_CD"]
hamps_df$violent_SO = rep(NA, nrow(hamps_df))
hamps_df$CoC = rep(NA, nrow(hamps_df))
hamps_df$theft_CD = rep(NA, nrow(hamps_df))
hamps_df$breach = rep(NA, nrow(hamps_df))
for (i in 1:nrow(hamps_df)){
types_i = toupper(hamps$INCIDENT.TYPE.RECODED[i])
hamps_df$violent_SO[i] = any(types_i %in% violent_types)
hamps_df$CoC[i] = any(types_i %in% CoC_types)
hamps_df$theft_CD[i] = any(types_i %in% theft_types)
hamps_df$breach[i] = FALSE # NO BREACH DATA IN HAMPSHIRE?!
}
hamps_df
fm_equip = hamps$any.FM.product.provided
for (i in 16:19){
hamps[ ,i] = gsub("^$", NA,  hamps[,i])
}
fm_comp = sapply(
1:nrow(hamps),
function(i){
any(!is.na(hamps[i,16:19]))
}
)
which(fm_equip == "") ## variable in raw file
which(fm_comp == FALSE)  ## variable made from product columns
## Replace missing with NA
warning_YN = gsub("^$", NA, hamps$Warning.delivered.to.Suspect..y.n.)
summary(warning_YN)
hamps_df$warning_YN = factor(warning_YN)
summary(hamps_df$warning_YN)
other_product_raw = hamps$Other.products.support.provided..please.explain...ie..alarms..address.flagging.or.other.target.hardening.products
grep("^Nothing", other_product_raw)
hamps_df$other_product = TRUE
hamps_df$other_product[grep("^Nothing", other_product_raw)] = FALSE
table(hamps_df$other_product)
RA = gsub("UNKNOWN", NA, hamps$Risk.Assessment.from.DASH..standard..medium.or.high.)
RA = gsub("NOT STATED", NA, RA)
hamps_df$risk_ass = factor(RA)
hamps_df
# protection order related variables
vic_po = hamps$victim...protection.orders..including.bail.and.license.conditions..in.place.to.support.them..with.dates.
vic_po_recoded = gsub("^$", "None", vic_po_recoded)
sus_po = hamps$Suspect...protection.orders..including.bail.and.license.conditions..in.place.against.them..with.dates.
po_postinc = hamps$protection.order...pre.post.incident
vic_po_recoded = hamps$victim.protection.orders.recoded
vic_po_recoded = gsub("^$", "None", vic_po_recoded)
sus_po = hamps$Suspect...protection.orders..including.bail.and.license.conditions..in.place.against.them..with.dates.
po_postinc = hamps$protection.order...pre.post.incident
po_df = data.frame(VictimID = hamps_df$victim_ID, Victim=vic_po_recoded, Pre_or_Post= po_postinc)
kable(po_df)
levels(factor(vic_po_recoded))
hamps_df$protection_order = rep("Yes", nrow(hamps_df))
victim_prev = hamps$Victim...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by....
victim_prev_list = strsplit(victim_prev, split = ";")
victim_prev = hamps$Victim...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by....
victim_prev_list = strsplit(victim_prev, split = ";")
victim_prev
victim_prev_list = strsplit(victim_prev, split = ";")
victim_prev_list = lapply(victim_prev_list, gsub, pattern = "^ ", replace = "") # remove extra spaces at start
victim_prev_list = lapply(victim_prev_list, gsub, pattern = " $", replace = "") # remove extra spaces at end
victim_prev_vec = unlist(victim_prev_list)
table(victim_prev_vec)
suspect_prev =hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by....
suspect_prev_list = strsplit(suspect_prev, split = ";")
suspect_prev_list = lapply(suspect_prev_list, gsub, pattern = "^ ", replace = "") # remove extra spaces at start
suspect_prev_list = lapply(suspect_prev_list, gsub, pattern = " $", replace = "") # remove extra spaces at end
suspect_prev_vec = unlist(suspect_prev_list)
table(suspect_prev_vec)
types_sus = sort(unique(suspect_prev_vec))
types_vic = sort(unique(victim_prev_vec))
# combine both
types_all = sort(unique(c(types_sus, types_vic)))
n_types = length(types_all)
vic_vec = rep(NA, n_types)
sus_vec = rep(NA, n_types)
types_sus
for (i in 1:n_types){
type_i = types_all[i]
vic_temp = integer(0)
sus_temp = integer(0)
for (j in 1:nrow(hamps)){
if(!any(is.na(victim_prev_list[[j]]))){
if(any(victim_prev_list[[j]]==type_i)){
vic_temp = c(vic_temp, j)
}
}
if(!any(is.na(suspect_prev_list[[j]]))){
if(any(suspect_prev_list[[j]]==type_i)){
sus_temp = c(sus_temp, j)
}
}
}
vic_vec[i] = paste(vic_temp, collapse=", ")
sus_vec[i] = paste(sus_temp, collapse=", ")
}
prev_df = data.frame(
type = types_all,
Victim_prev = vic_vec,
Suspect_prev = sus_vec
)
kable(prev_df)
susprev_int = strsplit(hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by...., split = ";")
hamps_df$violent_SO_susprev = FALSE
hamps_df$CoC_susprev = FALSE
hamps_df$theft_CD_susprev = FALSE
hamps_df$breach_susprev = FALSE
for (i in 1:nrow(hamps_df)){
incprev_i = susprev_int[[i]]
incprev_i = gsub("^ ", "", incprev_i)
incprev_i = gsub(" $", "", incprev_i)
if(any(incprev_i %in% type_df$inc_type[type_df$category == "violent_SO"])){
hamps_df$violent_SO_susprev[i] = TRUE
}
if(any(incprev_i %in% type_df$inc_type[type_df$category == "CoC"])){
hamps_df$CoC_susprev[i] = TRUE
}
if(any(incprev_i %in% type_df$inc_type[type_df$category == "theft_CD"])){
hamps_df$theft_CD_susprev[i] = TRUE
}
if(any(incprev_i %in% type_df$inc_type[type_df$category == "breach"])){
hamps_df$breach_susprev[i] = TRUE
}
}
hamps_df$sus_nprev = hamps$no.of.previous.offences
kable(hamps_df)%>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "900px", height = "400px")
hamps_df
hamps_comp1 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=1, skip=2)
hamps_comp2 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=2, skip=2)
hamps_comp3 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=3, skip=2)
hamps_comp4 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=4, skip=2)
hamps_comp5 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=5, skip=2)
hamps_comp1
hamps_comp1[is.na(hamps_comp1[,1])]
hamps_comp2[is.na(hamps_comp2[,1])]
hamps_comp1
summary(hamps_comp1)
summary(hamps_comp2)
summary(hamps_comp3)
summary(hamps_comp4)
dim(hamps_comp4)
hamps_comp4
hamps_comp4[180:187,]
summary(hamps_comp5)
dim(hamps_comp5)
hamps_comp4[165:172,]
names(hamps_comp1) = sprintf("%s_agg", names(hamps_comp1)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp3) = sprintf("%s_outcome", names(hamps_comp3)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp4) = sprintf("%s_aggprev", names(hamps_comp4)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp5) = sprintf("%s_susprev", names(hamps_comp5)) %>% gsub(pattern = " ", replacement = "_")
hamps_12 = full_join(hamps_comp1, hamps_comp2, by = join_by(Occurrence_No_agg == Occurrence_No_sus), relationship = "many-to-many")
names(hamps_comp1) = sprintf("%s_agg", names(hamps_comp1)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp2) = sprintf("%s_sus", names(hamps_comp2)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp3) = sprintf("%s_outcome", names(hamps_comp3)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp4) = sprintf("%s_aggprev", names(hamps_comp4)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp5) = sprintf("%s_susprev", names(hamps_comp5)) %>% gsub(pattern = " ", replacement = "_")
hamps_12 = full_join(hamps_comp1, hamps_comp2, by = join_by(Occurrence_No_agg == Occurrence_No_sus), relationship = "many-to-many")
install.packages("tidyverse")
names(hamps_comp1)
names(hamps_comp2)
hamps_comp1 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=1, skip=2)
hamps_comp3 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=3, skip=2)
hamps_comp5 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=5, skip=2)
names(hamps_comp1) = sprintf("%s_agg", names(hamps_comp1)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp2) = sprintf("%s_sus", names(hamps_comp2)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp3) = sprintf("%s_outcome", names(hamps_comp3)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp4) = sprintf("%s_aggprev", names(hamps_comp4)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp5) = sprintf("%s_susprev", names(hamps_comp5)) %>% gsub(pattern = " ", replacement = "_")
hamps_12 = full_join(hamps_comp1, hamps_comp2, by = join_by(Occurrence_No_agg == Occurrence_No_sus), relationship = "many-to-many")
dim(hamps_12)
names(hamps_comp2)
hamps_comp2 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=2, skip=2)
names(hamps_comp2)
names(hamps_comp2) = sprintf("%s_sus", names(hamps_comp2)) %>% gsub(pattern = " ", replacement = "_")
hamps_12 = full_join(hamps_comp1, hamps_comp2, by = join_by(Occurrence_No_agg == Occurrence_No_sus), relationship = "many-to-many")
dim(hamps_12)
hamps_12[100:105,]
?full_join
hamps_comp1[hamps_comp1$Occurrence_No_agg == 44240385081,]
hamps_comp1[hamps_comp1$Occurrence_No_agg == "44240385081",]
hamps_comp2[hamps_comp2$Occurrence_No_sus == "44240385081",]
hamps_12[100:105,]
hamps_123 = full_join(hamps_12, hamps_comp3, by = join_by(Occurrence_No_agg == OCC_No_outcome), relationship = "many-to-many")
dim(hamps_123)
hamps_123[100:105,]
vis_dat(hamps_123, sort_type=F)
nrow(hamps_123)
length(unique(hamps_123$Occurrence_No_agg))
table(hamps_123$`Off_/_Victim_Relationship_agg`)
table(hamps_123$`Off_/_Victim_Relationship_sus`)
hamps_123[(hamps_123$`Off_/_Victim_Relationship_agg` == "EX-PARTNER: HETEROSEXUAL"),"Off_/_Victim_Relationship_sus"] %>% kable()%>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "500px", height = "400px")
hamps_123[(hamps_123$`Off_/_Victim_Relationship_sus` == "EX-PARTNER: HETEROSEXUAL"),"Off_/_Victim_Relationship_agg"] %>% kable()%>%
kable_styling("striped", full_width = F) %>%
scroll_box(width = "500px", height = "400px")
hamps_123 = hamps_123[((hamps_123$`Off_/_Victim_Relationship_sus` == "EX-PARTNER: HETEROSEXUAL")|(hamps_123$`Off_/_Victim_Relationship_agg` == "EX-PARTNER: HETEROSEXUAL")),]
table(hamps_123$`Off_/_Victim_Relationship_agg`)
table(hamps_123$`Off_/_Victim_Relationship_sus`)
qnorm(0.125)
qnorm(0.8)
qnorm(0.2)
qnorm(0.9)
qnorm(0.85)
2*49*(1-0.49)*(1.04+1.96)^2
(2*49*(1-0.49)*(1.04+1.96)^2)/4
2*(7^2)*(1-0.7^2)*((1.04+1.96)^2)/4
2*(7^2)*((1.04+1.96)^2)/4
shiny::runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
getwd()
part140 = read.csv("Downloads/participant_data140.csv", header=T)
summary(part140)
dim(part140)
part140$arm = sample(c("A", "B"), size=280, replace=T)
summary(part140)
write.csv(part140, "Downloads/alloc_140.csv", quote=F, row.names=F)
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
res140 = read.csv("Downloads/trial_results140.csv", header=T)
names(res140)
lm140 = lm(outcome ~ sex + age + BMI + baseline + arm, data = res140)
summary(lm140)
mean(res140$BMI)
sd(res140$BMI)
cor(res140$baseline, res140$outcome)
cor(res140$baseline, res140$outcome, na.rm=T)
cor(res140$baseline, res140$outcome, na.omit=T)
cor(res140$baseline, res140$outcome, use = "pairwise")
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
res140a = read.csv("Downloads/trial_results140a.csv", header=T)
lm140a = lm(outcome ~ sex + age + BMI + baseline + arm, data = res140a)
summary(lm140a)
cor(res140a$baseline, res140a$outcome, use = "pairwise")
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
cor(res140$baseline, res140$outcome, use = "pairwise")
part222 = read.csv("Downloads/participant_data222.csv", header=T)
part222$arm = sample(c("A", "B"), size=444, replace=T)
write.csv(part222, "Downloads/alloc_222.csv", quote=F, row.names=F)
res222 = read.csv("Downloads/trial_results222.csv", header=T)
lm222 = lm(outcome ~ sex + age + BMI + baseline + arm, data = res222)
summary(lm222)
lm222 = lm(outcome ~ sex + age + BMI + baseline + arm + arm:BMI, data = res222)
summary(lm222)
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
res222a = read.csv("Downloads/trial_results222a.csv", header=T)
lm222a = lm(outcome ~ sex + age + BMI + baseline + arm, data = res222a)
summary(lm222a)
cor(res222a$baseline, res222a$outcome, use = "pairwise")
lm222a2 = lm(outcome ~ sex + age + BMI + baseline + arm + arm:sex, data = res222a)
summary(lm222a2)
lm222a2 = lm(outcome ~ sex + age + BMI + baseline + arm + arm:BMI, data = res222a)
summary(lm222a2)
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
res222a = read.csv("Downloads/trial_results222a.csv", header=T)
lm222a = lm(outcome ~ sex + age + BMI + baseline + arm, data = res222a)
summary(lm222a)
lm222a2 = lm(outcome ~ sex + age + BMI + baseline + arm + arm:BMI, data = res222a)
summary(lm222a2)
lm222a2 = lm(outcome ~ sex + age + BMI + baseline + arm + arm:sex, data = res222a)
summary(lm222a2)
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
res222a = read.csv("Downloads/trial_results222a.csv", header=T)
lm222a = lm(outcome ~ sex + age + BMI + baseline + arm, data = res222a)
summary(lm222a)
lm222a2 = lm(outcome ~ sex + age + BMI + baseline + arm + arm:sex, data = res222a)
summary(lm222a2)
cor(res222a$baseline, res222a$outcome, use = "pairwise")
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
res222a = read.csv("Downloads/trial_results222a.csv", header=T)
lm222a = lm(outcome ~ sex + age + BMI + baseline + arm, data = res222a)
summary(lm222a)
lm222a2 = lm(outcome ~ sex + age + BMI + baseline + arm + arm:sex, data = res222a)
summary(lm222a2)
cor(res222a$baseline, res222a$outcome, use = "pairwise")
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
321/50
### for github:
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/ct4")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?pt
2*(1-pt(1.85, df=14))
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# for lecture notes
setwd("/Users/rachelo/Documents/GitRepos/ct4/lecture_notes")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
### for github:
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/ct4")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
