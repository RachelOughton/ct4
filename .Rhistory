length(sus_ethn_i)>0,
paste(sus_ethn_i, collapse = " ; "),
NA
)
}
kable(hamps_comp_df)%>%
kable_styling("striped", full_width = F)%>%
scroll_box(width = "900px", height = "400px")
hamps_comp2[hamps_comp2$C_Nominal_Number_sus == "3785583",] %>% kable() %>%
kable_styling("striped", full_width = F)%>%
scroll_box(width = "900px")
grep(";", hamps_comp_df$suspect_ethnicity)
grep(";", hamps_comp_df$incident_type_raw)
hamps_comp_df = hamps_comp_df[ ,c(1:7, 12, 8:11, 13)]
df_inc = data.frame(type = hamps_comp_df$incident_type_raw)
df_inc_cat = left_join(df_inc, inc_type_hamps, by = join_by(type == inc_type))
hamps_comp_df$violent_SO = df_inc_cat$category == "violent_SO"
hamps_comp_df$CoC = df_inc_cat$category == "CoC"
hamps_comp_df$theft_CD = df_inc_cat$category == "theft_CD"
hamps_comp_df$breach = df_inc_cat$category == "breach"
hamps_comp_df$FM_equip = FALSE
hamps_comp_df$warning_YN = NA
hamps_comp_df$other_product = NA
risk_ass_df = unique(hamps_comp_full[ ,c(4,15)])
hamps_comp_df_tmp = left_join(hamps_comp_df, risk_ass_df, by = join_by(victim_ID == C_Nominal_Number_agg))
summary(hamps_comp_df)
summary(hamps_comp_df_tmp)
summary(hamps_df)
hamps_comp_df$risk_ass = as.factor(hamps_comp_df_tmp$`Risk_(Detail)_-_Incidents_agg`)
summary(hamps_comp_df)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(gridExtra)
library(kableExtra)
# setwd("OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/")
hamps = read.csv("Hampshire/Anonymised- Op Sentry - Stage 1 Hampshire Complete RE(REVISEDproject management data).csv", header=T)
# Row 26 imports even though it doesn't contain anything
hamps = hamps[-26,]
# str(hamps)
hamps_df = data.frame(victim_ID = na.omit(hamps$Victim.Unique.ID..CoP.))
hamps_df$victim_sex = factor(hamps$victim.sex, levels = c("Female", "Male"))
table(hamps_df$victim_sex)
hamps_df$victim_ethnicity = factor(hamps$victim.ethnicity..where.recorded.)
table(hamps_df$victim_ethnicity)
hamps_df$victim_age = hamps$Victim.age.at.time.of.incident
ggplot(data=hamps_df, aes(x=victim_age, fill = victim_sex)) +
geom_histogram(bins =10) + xlab("Victim age") + theme_bw()
hamps_df$suspect_ID = hamps$Suspect.Unique.ID
hamps_df$suspect_sex = factor(hamps$Suspect.Sex, levels = c("Female", "Male"))
hamps_df$suspect_ethnicity = factor(hamps$Suspect.ethnicity)
hamps_df$suspect_age = hamps$Suspect.Age..at.time.of.incident.
table(hamps_df$suspect_sex)
table(hamps_df$suspect_ethnicity)
ggplot(data=hamps_df, aes(x=suspect_age, fill = suspect_sex)) +
geom_histogram(bins=10) + xlab("Suspect age") + theme_bw()
ggplot(data=hamps_df, aes(
x=victim_age, y=suspect_age,
pch = victim_sex, col=suspect_sex)) +
geom_point() + xlab("Victim age") + ylab("Suspect age") +
theme_bw() + geom_abline(intercept=0,slope=1, lwd=0.3, lty=2)
cor(x=hamps_df$victim_age, y=hamps_df$suspect_age)
cor(x=hamps_df$victim_age[hamps_df$victim_sex == "Female"],
y=hamps_df$suspect_age[hamps_df$victim_sex == "Female"])
ggplot(data=hamps_df, aes(
x=victim_age, y=suspect_age,
pch = victim_sex, col=suspect_ethnicity)) +
geom_point() + xlab("Victim age") + ylab("Suspect age") +
theme_bw() + geom_abline(intercept=0,slope=1, lwd=0.3, lty=2)
hamps_df$police_force = hamps$Police.force
hamps_df$police_district = hamps$Police.force.district.of.address.where.products.are.issued
hamps_df$police_district = gsub("^New Forest.+", "New Forest", hamps_df$police_district) # tidy up New Forest
hamps_df$police_district = factor(hamps_df$police_district)
table(hamps_df$police_district)
date1 = hamps$Date.of.Incident.that.has.resulted.in.product.s..being.offered
date_latest = as.Date(hamps$Date.of.Incident.that.has.resulted.in.product.s..being.offered..Latest.date., format = "%d/%m/%y")
date_warning = as.Date(hamps$Date.warning.delivered, format = "%d/%m/%y")
dates = data.frame(VID = hamps_df$victim_ID, date = date1, latest = date_latest, warning=date_warning)
dates
time_diff = dates$warning - dates$latest
ggplot(data=NULL) + geom_histogram(aes(x=as.numeric(time_diff)), bins=10)+
xlab("Time difference from incident to warning (days)") + theme_bw()
hamps_df$date_latest = date_latest
incident_type = hamps$Incident.type.that.has.resulted.in.product.s..being.offered
incident_type_str = paste(incident_type, collapse = " / ")
incident_type_sep = unlist(strsplit(incident_type_str, split = " / "))
incident_type_unique = unique(incident_type_sep)
type_df = data.frame(
type = incident_type_unique
)
type_df$category = c("violent_SO", "CoC", "violent_SO", "CoC", "violent_SO", "CoC", "violent_SO", "CoC", "violent_SO", "theft_CD")
hamps_df$incident_type_raw = hamps$Incident.type.that.has.resulted.in.product.s..being.offered
violent_types = type_df$type[type_df$category == "violent_SO"]
CoC_types = type_df$type[type_df$category == "CoC"]
theft_types = type_df$type[type_df$category == "theft_CD"]
hamps_df$violent_SO = rep(NA, nrow(hamps_df))
hamps_df$CoC = rep(NA, nrow(hamps_df))
hamps_df$theft_CD = rep(NA, nrow(hamps_df))
hamps_df$breach = rep(NA, nrow(hamps_df))
for (i in 1:nrow(hamps_df)){
types_i_raw = hamps$Incident.type.that.has.resulted.in.product.s..being.offered[i]
types_i = strsplit(types_i_raw, " / ")[[1]]
hamps_df$violent_SO[i] = any(types_i %in% violent_types)
hamps_df$CoC[i] = any(types_i %in% CoC_types)
hamps_df$theft_CD[i] = any(types_i %in% theft_types)
hamps_df$breach[i] = FALSE # NO BREACH DATA IN HAMPSHIRE?!
}
kable(hamps_df[,c("incident_type_raw", "violent_SO", "CoC", "theft_CD", "breach")])
library(ggVennDiagram)
crime_types = hamps_df[ ,c("theft_CD", "violent_SO", "CoC")]
ct_list = list(0)
ct_list[[1]] = (1:25)[crime_types$theft_CD]
ct_list[[2]] = (1:25)[crime_types$violent_SO]
ct_list[[3]] = (1:25)[crime_types$CoC]
names(ct_list) = c("Theft / Criminal damage", "Violent / Sexual", "CoC")
ggVennDiagram(ct_list, label = "count", order.set.by = "name") +
theme(legend.position = "None") +
scale_fill_gradient(low = "lightgrey", high = "firebrick3")
fm_equip = hamps$any.FM.product.provided
for (i in 16:19){
hamps[ ,i] = gsub("^$", NA,  hamps[,i])
}
fm_comp = sapply(
1:nrow(hamps),
function(i){
any(!is.na(hamps[i,16:19]))
}
)
which(fm_equip == "") ## variable in raw file
which(fm_comp == FALSE)  ## variable made from product columns
hamps_df$FM_equip = TRUE
## Replace missing with NA
warning_YN = gsub("^$", NA, hamps$Warning.delivered.to.Suspect..y.n.)
summary(warning_YN)
hamps_df$warning_YN = factor(warning_YN)
summary(hamps_df$warning_YN)
other_product_raw = hamps$Other.products.support.provided..please.explain...ie..alarms..address.flagging.or.other.target.hardening.products
grep("^Nothing", other_product_raw)
hamps_df$other_product = TRUE
hamps_df$other_product[grep("^Nothing", other_product_raw)] = FALSE
table(hamps_df$other_product)
other_product_raw[24]
RA = factor(hamps$Risk.Assessment.from.DASH..standard..medium.or.high.)
hamps_df$risk_ass = RA
summary(hamps_df$risk_ass)
# protection order related variables
vic_po = hamps$victim...protection.orders..including.bail.and.license.conditions..in.place.to.support.them..with.dates.
vic_po_recoded = hamps$victim.protection.orders.recoded
vic_po_recoded = gsub("^$", "None", vic_po_recoded)
sus_po = hamps$Suspect...protection.orders..including.bail.and.license.conditions..in.place.against.them..with.dates.
po_postinc = hamps$protection.order...pre.post.incident
po_df = data.frame(VictimID = hamps_df$victim_ID, Victim=vic_po_recoded, Pre_or_Post= po_postinc)
kable(po_df)
levels(factor(vic_po_recoded))
victim_prev = hamps$Victim...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by....
victim_prev_list = strsplit(victim_prev, split = ";")
victim_prev_list = lapply(victim_prev_list, gsub, pattern = "^ ", replace = "") # remove extra spaces at start
victim_prev_list = lapply(victim_prev_list, gsub, pattern = " $", replace = "") # remove extra spaces at end
victim_prev_vec = unlist(victim_prev_list)
table(victim_prev_vec)
sum(is.na(victim_prev_vec))
suspect_prev = hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by....
suspect_prev_list = strsplit(suspect_prev, split = ";")
suspect_prev_list = lapply(suspect_prev_list, gsub, pattern = "^ ", replace = "") # remove extra spaces at start
suspect_prev_list = lapply(suspect_prev_list, gsub, pattern = " $", replace = "") # remove extra spaces at end
suspect_prev_vec = unlist(suspect_prev_list)
table(suspect_prev_vec)
types_sus = sort(unique(suspect_prev_vec))
types_vic = sort(unique(victim_prev_vec))
# combine both
types_all = sort(unique(c(types_sus, types_vic)))
n_types = length(types_all)
vic_vec = rep(NA, n_types)
sus_vec = rep(NA, n_types)
for (i in 1:n_types){
type_i = types_all[i]
vic_temp = integer(0)
sus_temp = integer(0)
for (j in 1:nrow(hamps)){
if(!any(is.na(victim_prev_list[[j]]))){
if(any(victim_prev_list[[j]]==type_i)){
vic_temp = c(vic_temp, j)
}
}
if(!any(is.na(suspect_prev_list[[j]]))){
if(any(suspect_prev_list[[j]]==type_i)){
sus_temp = c(sus_temp, j)
}
}
}
vic_vec[i] = paste(vic_temp, collapse=", ")
sus_vec[i] = paste(sus_temp, collapse=", ")
}
prev_df = data.frame(
type = types_all,
Victim_prev = vic_vec,
Suspect_prev = sus_vec
)
kable(prev_df)
hamps_df$protection_order = rep("Yes", nrow(hamps_df))
hamps_comp_df$protection_order = rep(NA, nrow(hamps_comp_df))
suspect_prev_vec
table(suspect_prev_vec)
prev_df
names(prev_df)
types_sus
incident_type
inc_type_hamps
sus_type %in% inc_type_hamps$inc_type
types_sus %in% inc_type_hamps$inc_type
inc_types_intervention = data.frame(inc_type = types_sus)
inc_types_intervention
write.csv(inc_types_intervention, file = "OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/Hampshire/incident_types_hamps_int.csv", row.names = F, quote=F)
types_sus %in% incident_type_unique
inc_types_intprev = read.csv("Hampshire/incident_types_hamps_int.csv", header=T)
write.csv(inc_types_intervention, file = "OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/Hampshire/incident_types_hamps_int.csv", row.names = F, quote=F, sep = "\t")
write.csv(inc_types_intervention, file = "OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/Hampshire/incident_types_hamps_int.csv", row.names = F, quote=F, delim = "\t")
?write.csv
write.csv2(inc_types_intervention, file = "OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/Hampshire/incident_types_hamps_int.csv", row.names = F, quote=F, delim = "\t")
write.csv2(inc_types_intervention, file = "OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/Hampshire/incident_types_hamps_int.csv", row.names = F, quote=F)
write.csv2(inc_types_intervention, file = "OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/Hampshire/incident_types_hamps_int.csv", row.names = F, quote=F)
inc_types_intervention
write.table(inc_types_intervention, file = "OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/Hampshire/incident_types_hamps_int.csv", row.names = F, quote=F, sep = "\t")
suspect_prev = gsub(
",", "",
hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.
types.seperated.by....)
suspect_prev = gsub(
",", "",
hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by....)
suspect_prev = gsub(
",", "",
hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by....)
class(hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by....)
gsub(",", "", hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by....)
write.table(inc_types_intervention, file = "OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/Hampshire/incident_types_hamps_int.tsv", row.names = F, quote=F, sep = "\t")
names(inc_types_intprev)
names(inc_types_hamps)
inc_types_intprev = read.tsv("Hampshire/incident_types_hamps_int.tsv", header=T)
kable(inc_types_intprev)
inc_types_intprev = read.table("Hampshire/incident_types_hamps_int.tsv", header=T)
inc_types_intprev = read_tsv("Hampshire/incident_types_hamps_int.tsv", header=T)
?read_tsv
inc_types_intprev = read_delim("Hampshire/incident_types_hamps_int.tsv", delim = "\t")
summary(inc_types_intprev)
kable(inc_types_intprev)
str(hamps_df)
str(hamps_comp_df)
dim(hamps_df)
dim(hamps)
hamps
susprev_int = strsplit(hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by...., split = ";")
susprev_int
susprev_int= gsub("^ ", "^", susprev_int)
susprev_int
susprev_int = strsplit(hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by...., split = ";")
susprev_int[[1]]
gsub("^ ", "", susprev_int[[1]])
names(hamps_comp_df)
susprev_int = strsplit(hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by...., split = ";")
susprev_int = strsplit(hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by...., split = ";")
hamps_df$violent_SO_susprev = FALSE
hamps_df$CoC_susprev = FALSE
hamps_df$theft_CD_susprev = FALSE
hamps_df$breach_susprev = FALSE
for (i in 1:nrow(hamps_df)){
incprev_i = susprev_int[[i]]
incprev_i = gsub("^ ", "^", incprev_i)
incprev_i = gsub(" $", "$", incprev_i)
if any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "violent_SO"]){
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "violent_SO"])){
hamps_df$violent_SO_susprev[i] = TRUE
}
for (i in 1:nrow(hamps_df)){
incprev_i = susprev_int[[i]]
incprev_i = gsub("^ ", "^", incprev_i)
incprev_i = gsub(" $", "$", incprev_i)
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "violent_SO"])){
hamps_df$violent_SO_susprev[i] = TRUE
}
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "CoC"])){
hamps_df$CoC_susprev[i] = TRUE
}
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "theft_CD"])){
hamps_df$theft_CD_susprev[i] = TRUE
}
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "breach"])){
hamps_df$breach_susprev[i] = TRUE
}
}
hamps_df
susprev_int = strsplit(hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by...., split = ";")
hamps_df$violent_SO_susprev = FALSE
hamps_df$CoC_susprev = FALSE
hamps_df$theft_CD_susprev = FALSE
hamps_df$breach_susprev = FALSE
i=1
incprev_i = susprev_int[[i]]
incprev_i
incprev_i = gsub("^ ", "^", incprev_i)
incprev_i = gsub(" $", "$", incprev_i)
incprev_i
incprev_i = susprev_int[[i]]
incprev_i = gsub("^ ", "", incprev_i)
incprev_i = gsub(" $", "", incprev_i)
incprev_i
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "violent_SO"])){
hamps_df$violent_SO_susprev[i] = TRUE
}
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "CoC"])){
hamps_df$CoC_susprev[i] = TRUE
}
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "theft_CD"])){
hamps_df$theft_CD_susprev[i] = TRUE
}
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "breach"])){
hamps_df$breach_susprev[i] = TRUE
}
hamps_df[1,]
susprev_int = strsplit(hamps$Suspect...previous.DA.incidents.over.the.past.12.months..incident.type....Incident.types.seperated.by...., split = ";")
hamps_df$CoC_susprev = FALSE
hamps_df$breach_susprev = FALSE
for (i in 1:nrow(hamps_df)){
incprev_i = susprev_int[[i]]
incprev_i = gsub("^ ", "", incprev_i)
incprev_i = gsub(" $", "", incprev_i)
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "violent_SO"])){
hamps_df$violent_SO_susprev[i] = TRUE
}
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "CoC"])){
hamps_df$CoC_susprev[i] = TRUE
}
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "theft_CD"])){
hamps_df$theft_CD_susprev[i] = TRUE
}
if(any(incprev_i %in% inc_types_intprev$inc_type[inc_types_intprev$category == "breach"])){
hamps_df$breach_susprev[i] = TRUE
}
}
hamps_df
q()
### for github:
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/ct4")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
### for github:
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/ct4")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
# for lecture notes
setwd("/Users/rachelo/Documents/GitRepos/ct4/lecture_notes")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
### for github:
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/ct4")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(gtsummary)
?gtsummary
?tbl_regression
### for github:
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/ct4")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
df10K1 = read.csv(file = "/Users/rachelo/Downloads/participant_data10K.csv", header=T)
dim(df10K1)
df10K1$arm = sample(c("A", "B"), size=20000, replace=T)
write.csv(df10K1,
file = "/Users/rachelo/Downloads/participant_data10k_alloc.csv",
quote=F, row.names=F)
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
res10k1 = read.csv(file = "/Users/rachelo/Downloads/trial_results10k1.csv", header=T)
## Missing data mechanism
nab10k1 = nabular(res10k1)
library(naniar)
## Missing data mechanism
nab10k1 = nabular(res10k1)
summary(res10k1)
res10k1_miss = cbind(df10K1, res10k1[,10])
summary(res10k1_miss)
nab10k1 = nabular(res10k1_miss)
glm10k1 = glm(baseline_NA ~ sex + age + BMI + arm, data= nab10k1, family = binomial(link="logit"))
gt_regression(glm10k1)
tbl_regression(glm10k1)
lm_miss_10k1 = lm(baseline ~ sex+ age + BMI, data = nab10k1)
tbl_regression(lm_miss_10k1)
hist(res10k1$outcome)
hist(res10k1$baseline)
plot(outcome ~ baseline, data=res10k1)
lm(outcome ~ baseline + sex + BMI + age + arm, data = res10k1)
tbl_regression(lm(outcome ~ baseline + sex + BMI + age + arm, data = res10k1))
summary(lm(outcome ~ baseline + sex + BMI + age + arm, data = res10k1))
ggplot(data = res10k1, aes(x=baseline, y=outcome, col = sex)) + geom_point() + facet_wrap(~arm)
summary(lm(outcome ~ baseline + sex + BMI + age + arm + I(arm*sex), data = res10k1))
lm(outcome ~ baseline + sex + BMI + age + arm + I(arm*sex), data = res10k1)
lm(outcome ~ baseline + sex + BMI + age + arm + I(arm:sex), data = res10k1)
lm(outcome ~ baseline + sex + BMI + age + arm + arm:sex, data = res10k1)
summary(lm(outcome ~ baseline + sex + BMI + age + arm + arm:sex, data = res10k1))
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
df100 = read.csv(file = "/Users/rachelo/Downloads/participant_data100.csv", header=T)
df100$arm = sample(c("A", "B"), size=200, replace=T)
write.csv(df100,
file = "/Users/rachelo/Downloads/participant_data100_alloc.csv",
quote=F, row.names=F)
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
write.csv(df100,
file = "/Users/rachelo/Downloads/participant_data100_alloc.csv",
quote=F, row.names=F)
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
write.csv(df100,
file = "/Users/rachelo/Downloads/participant_data100_alloc.csv",
quote=F, row.names=F)
summary(df100)
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
getwd()
write.csv(df100,
file = "/Users/rachelo/Downloads/participant_data100_alloc.csv",
quote=F, row.names=F)
head(df100)
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
res100 = read.csv(file = "/Users/rachelo/Downloads/trial_results100.csv", header=T)
res100_miss = cbind(df100, res100[,10])
nab100 = nabular(res100_miss)
glm100 = glm(baseline_NA ~ sex + age + BMI + arm,
data= nab100,
family = binomial(link="logit"))
lm_miss_100 = lm(baseline ~ sex+ age + BMI, data = nab100)
summary(lm_miss_100)
summary(lm_miss_100)
summary(glm100)
hist(res100$outcome)
hist(res100$baseline)
plot(outcome ~ baseline, data=res100)
lm100 = lm(outcome ~ baseline + sex + BMI + age + arm, data = res100)
lm100_int = lm(outcome ~ baseline + sex + BMI + age + arm + arm:sex, data = res100)
summary(lm100)
summary(lm100_int)
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
res100_rand = read.csv(file = "/Users/rachelo/Downloads/trial_results100_rand.csv", header=T)
plot(res100_rand$outcome ~ res100$outcome)
hist(res100_rand$outcome)
hist(res100_rand$baseline)
plot(outcome ~ baseline, data=res100_rand)
lm100 = lm(outcome ~ baseline + sex + BMI + age + arm, data = res100_rand)
lm100_int = lm(outcome ~ baseline + sex + BMI + age + arm + arm:sex, data = res100_rand)
summary(lm100)
summary(lm100_int)
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
res100_rand2 = read.csv(file = "/Users/rachelo/Downloads/trial_results100_rand2.csv", header=T)
hist(res100_rand2$outcome)
hist(res100_rand2$baseline)
plot(outcome ~ baseline, data=res100_rand2)
lm100_rand2 = lm(outcome ~ baseline + sex + BMI + age + arm,
data = res100_rand2)
lm100_int_rand2 = lm(outcome ~ baseline + sex + BMI + age + arm + arm:sex,
data = res100_rand2)
summary(lm100_int_rand2)
ggplot(res100_rand2, aes(x=baseline, y=outcome, col=sex)) +
geom_point() + facet_wrap(~arm)
lm100_rand2_men= lm(outcome ~ baseline + sex + BMI + age + arm,
data = res100_rand2[res100_rand2$sex=="M",])
unique(res100_rand2)
unique(res100_rand2$sex)
lm100_rand2_men= lm(outcome ~ baseline + BMI + age + arm,
data = res100_rand2[res100_rand2$sex=="M",])
summary(lm100_rand2_men)
lm100_rand2_women= lm(outcome ~ baseline + BMI + age + arm,
data = res100_rand2[res100_rand2$sex=="F",])
summary(lm100_rand2_women)
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
### Generate large dataset for descriptive statistics
df10K2 = read.csv(file = "/Users/rachelo/Downloads/participant_data10K2.csv", header=T)
sd(df10K2$baseline)
sd(df10K2$baseline, na.rm=T)
sd(res100_rand2$baseline)
mean(df10K2$baseline, na.rm=T)
mean(res100_rand2$baseline)
hist(df10K2$BMI)
sd(df10K2$BMI)
df10K2$arm = sample(c("A", "B"), size=20000, replace=T)
write.csv(df10K2,
file = "/Users/rachelo/Downloads/participant_data10K2_alloc.csv",
quote=F, row.names=F)
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
res10K2_rand = read.csv(file = "/Users/rachelo/Downloads/trial_results10K2.csv", header=T)
cor(res10K2_rand$outcome, res10K2_rand$baseline)
cor(res100_rand$outcome, res100_rand$baseline)
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
### CHecking that thefull data aren't used again
res100_miss = read.csv(file = "/Users/rachelo/Downloads/trial_results100_miss.csv", header=T)
summary(res100_miss)
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
update.packages("lme4")
runApp('~/Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2024/ClinicalTrials4H/Assignment1/CT4_assignment1_2425')
update.packages("Rcpp")
q()
