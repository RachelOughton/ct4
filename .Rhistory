hamps_inc_types$category[hamps_inc_types$inc_type == hamps_int_df$incident_type_raw[i]]
}
)
hamps_int_df$violent_SO = hamps_int_df$category == "violent_SO"
hamps_int_df$CoC = hamps_int_df$category == "CoC"
hamps_int_df$theft_CD = hamps_int_df$category == "theft_CD"
hamps_int_df$breach = hamps_int_df$category == "breach"
hamps_int_df[,13:17] %>% kable() %>% kable_styling("striped") %>%
scroll_box(width="900px", height = "600px")
sum(hamps_comp_12$`Start_Date_(SD_Adj)_agg`!=hamps_comp_12$`Start_Date_(SD_Adj)_sus`, na.rm=T)
hamps_comp_df$date_latest = as.Date(hamps_comp_12$`Start_Date_(SD_Adj)_agg`, format = "%Y-%m-%d")
summary(hamps_comp_df$date_latest)
hamps_comp_df$date_warning = NA
hamps_comp_12 = hamps_comp_12[!(is.na(hamps_comp_12$Occ_Type_agg)),]
unique(hamps_comp_12$Occ_Type_agg)
unique(hamps_comp_12$Occ_Type_sus)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(gridExtra)
library(kableExtra)
library(readr)
library(readxl)
library(tidyverse)
library(visdat)
library(reshape2)
library(gtsummary)
# setwd("/Users/rachelo/OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/")
hamps_int = read.csv("Hampshire/Anonymised- Op Sentry - Stage 1 Hampshire Complete RE(REVISEDproject management data).csv", header=T)
# Row 26 imports even though it doesn't contain anything
hamps_int = hamps_int[-26,]
# str(hamps)
hamps_int = hamps_int[!(hamps_int$victim.sex == "Male"),]
hamps_comp1 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=1, skip=2)
hamps_comp2 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=2, skip=2)
hamps_comp3 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=3, skip=2)
hamps_comp4 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=4, skip=2)
hamps_comp5 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=5, skip=2)
names(hamps_comp1) = sprintf("%s_agg", names(hamps_comp1)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp2) = sprintf("%s_sus", names(hamps_comp2)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp3) = sprintf("%s_outcome", names(hamps_comp3)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp4) = sprintf("%s_aggprev", names(hamps_comp4)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp5) = sprintf("%s_susprev", names(hamps_comp5)) %>% gsub(pattern = " ", replacement = "_")
hamps_comp1a = hamps_comp1[hamps_comp1$`Gender_Code_(IP)_agg` == "F",]
hamps_comp1a = hamps_comp1a[hamps_comp1a$`Off_/_Victim_Relationship_agg` %in%c("EX-PARTNER: HETEROSEXUAL", "PARTNER: HETEROSEXUAL"),]
dim(hamps_comp1a)
length(unique(hamps_comp1a$C_Nominal_Number_agg))
hamps_vicID_dup = hamps_comp1a$C_Nominal_Number_agg[duplicated(hamps_comp1a$C_Nominal_Number_agg)]
hamps_vicID_dup
hamps_comp1a[hamps_comp1a$C_Nominal_Number_agg %in% hamps_vicID_dup,] %>% kable %>%
scroll_box(width = "900px")
hamps_comp1a = hamps_comp1a[!duplicated(hamps_comp1a$C_Nominal_Number_agg),]
any(duplicated(hamps_comp1a$C_Nominal_Number_agg))
hamps_comp2a = hamps_comp2[hamps_comp2$`Off_/_Victim_Relationship_sus` %in%c("EX-PARTNER: HETEROSEXUAL", "PARTNER: HETEROSEXUAL"),]
hamps_susID_dup = hamps_comp2a$C_Nominal_Number_sus[duplicated(hamps_comp2a$C_Nominal_Number_sus)]
hamps_susID_dup
hamps_comp2a[hamps_comp2a$C_Nominal_Number_sus %in% hamps_susID_dup,] %>% kable %>%
scroll_box(width = "900px", height = "600px")
hamps_comp2a = hamps_comp2a[!duplicated(hamps_comp2a$C_Nominal_Number_sus),]
any(duplicated(hamps_comp2a$C_Nominal_Number_sus))
dim(hamps_comp2a)
hamps_comp_12 = full_join(hamps_comp1a, hamps_comp2a, by = join_by(Occurrence_No_agg == Occurrence_No_sus), relationship = "many-to-many")
dim(hamps_comp_12)
vis_dat(hamps_comp_12, sort_type = F)
hamps_comp_12 = hamps_comp_12[hamps_comp_12$`Gender_Code_(IP)_sus` == "M",]
hamps_int_df = data.frame(
victim_ID = hamps_int$Victim.Unique.ID..CoP.,
victim_sex = hamps_int$victim.sex,
victim_age = hamps_int$Victim.age.at.time.of.incident,
victim_ethnicity = hamps_int$victim.ethnicity..where.recorded.
)
gtsummary::tbl_summary(hamps_int_df[ ,2:4])
hamps_comp_df = data.frame(
victim_ID = hamps_comp_12$C_Nominal_Number_agg,
victim_sex = hamps_comp_12$`Gender_Code_(IP)_agg`,
victim_age = hamps_comp_12$Age_agg,
victim_ethnicity = hamps_comp_12$SD_Ethnicity_agg
)
gtsummary::tbl_summary(hamps_comp_df[ ,2:4])
hamps_int_df$suspect_ID = hamps_int$Suspect.Unique.ID
hamps_int_df$suspect_sex = hamps_int$Suspect.Sex
hamps_int_df$suspect_age = hamps_int$Suspect.Age..at.time.of.incident.
hamps_int_df$suspect_ethnicity = hamps_int$Suspect.ethnicity
gtsummary::tbl_summary(hamps_int_df[ ,6:8])
hamps_comp_df$suspect_ID = hamps_comp_12$C_Nominal_Number_sus
hamps_comp_df$suspect_sex = hamps_comp_12$`Gender_Code_(IP)_sus`
hamps_comp_df$suspect_age = hamps_comp_12$Age_sus
hamps_comp_df$suspect_ethnicity = hamps_comp_12$SD_Ethnicity_sus
gtsummary::tbl_summary(hamps_comp_df[ ,6:8])
hamps_int_df$police_force = hamps_int$Police.force
hamps_int_df$police_district = hamps_int$Police.force.district.of.address.where.products.are.issued
hamps_int_df$police_district = gsub("^New Forest.+", "New Forest", hamps_int_df$police_district) # tidy up New Forest
table(hamps_int_df$police_district)
hamps_comp_df$police_force = hamps_comp_12$police_force = "Hampshire and Isle of Wight Constabulary"
hamps_comp_df$police_district = hamps_comp_12$District_Name_agg
hamps_inc_types = read.csv(file = "Hampshire/inc_types_hamps.csv", header=T)
hamps_inc_types %>% kable %>% kable_styling("striped") %>%
scroll_box(height = "600px")
hamps_int_df$date_latest = as.Date(hamps_int$Date.of.Incident.that.has.resulted.in.product.s..being.offered..Latest.date., format = "%d/%m/%Y")
summary(hamps_int_df$date_latest)
hamps_int_df$date_warning = as.Date(hamps_int$Date.warning.delivered, format = "%d/%m/%Y")
summary(hamps_int_df$date_warning)
hamps_int_df$incident_type_raw = toupper(hamps_int$INCIDENT.TYPE.RECODED)
hamps_int_df$category = sapply(
1:nrow(hamps_int_df),
function(i){
hamps_inc_types$category[hamps_inc_types$inc_type == hamps_int_df$incident_type_raw[i]]
}
)
hamps_int_df$violent_SO = hamps_int_df$category == "violent_SO"
hamps_int_df$CoC = hamps_int_df$category == "CoC"
hamps_int_df$theft_CD = hamps_int_df$category == "theft_CD"
hamps_int_df$breach = hamps_int_df$category == "breach"
hamps_int_df[,13:17] %>% kable() %>% kable_styling("striped") %>%
scroll_box(width="900px", height = "600px")
sum(hamps_comp_12$`Start_Date_(SD_Adj)_agg`!=hamps_comp_12$`Start_Date_(SD_Adj)_sus`, na.rm=T)
hamps_comp_df$date_latest = as.Date(hamps_comp_12$`Start_Date_(SD_Adj)_agg`, format = "%Y-%m-%d")
summary(hamps_comp_df$date_latest)
hamps_comp_df$date_warning = NA
hamps_comp_12 = hamps_comp_12[!(is.na(hamps_comp_12$Occ_Type_agg)),]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(gridExtra)
library(kableExtra)
library(readr)
library(readxl)
library(tidyverse)
library(visdat)
library(reshape2)
library(gtsummary)
# setwd("/Users/rachelo/OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/")
hamps_int = read.csv("Hampshire/Anonymised- Op Sentry - Stage 1 Hampshire Complete RE(REVISEDproject management data).csv", header=T)
# Row 26 imports even though it doesn't contain anything
hamps_int = hamps_int[-26,]
# str(hamps)
hamps_int = hamps_int[!(hamps_int$victim.sex == "Male"),]
hamps_comp1 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=1, skip=2)
hamps_comp2 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=2, skip=2)
hamps_comp3 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=3, skip=2)
hamps_comp4 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=4, skip=2)
hamps_comp5 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=5, skip=2)
names(hamps_comp1) = sprintf("%s_agg", names(hamps_comp1)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp2) = sprintf("%s_sus", names(hamps_comp2)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp3) = sprintf("%s_outcome", names(hamps_comp3)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp4) = sprintf("%s_aggprev", names(hamps_comp4)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp5) = sprintf("%s_susprev", names(hamps_comp5)) %>% gsub(pattern = " ", replacement = "_")
hamps_comp1a = hamps_comp1[hamps_comp1$`Gender_Code_(IP)_agg` == "F",]
hamps_comp1a = hamps_comp1a[hamps_comp1a$`Off_/_Victim_Relationship_agg` %in%c("EX-PARTNER: HETEROSEXUAL", "PARTNER: HETEROSEXUAL"),]
dim(hamps_comp1a)
length(unique(hamps_comp1a$C_Nominal_Number_agg))
hamps_vicID_dup = hamps_comp1a$C_Nominal_Number_agg[duplicated(hamps_comp1a$C_Nominal_Number_agg)]
hamps_vicID_dup
hamps_comp1a[hamps_comp1a$C_Nominal_Number_agg %in% hamps_vicID_dup,] %>% kable %>%
scroll_box(width = "900px")
hamps_comp1a = hamps_comp1a[!duplicated(hamps_comp1a$C_Nominal_Number_agg),]
any(duplicated(hamps_comp1a$C_Nominal_Number_agg))
hamps_comp2a = hamps_comp2[hamps_comp2$`Off_/_Victim_Relationship_sus` %in%c("EX-PARTNER: HETEROSEXUAL", "PARTNER: HETEROSEXUAL"),]
hamps_susID_dup = hamps_comp2a$C_Nominal_Number_sus[duplicated(hamps_comp2a$C_Nominal_Number_sus)]
hamps_susID_dup
hamps_comp2a[hamps_comp2a$C_Nominal_Number_sus %in% hamps_susID_dup,] %>% kable %>%
scroll_box(width = "900px", height = "600px")
hamps_comp2a = hamps_comp2a[!duplicated(hamps_comp2a$C_Nominal_Number_sus),]
any(duplicated(hamps_comp2a$C_Nominal_Number_sus))
dim(hamps_comp2a)
hamps_comp_12 = full_join(hamps_comp1a, hamps_comp2a, by = join_by(Occurrence_No_agg == Occurrence_No_sus), relationship = "many-to-many")
dim(hamps_comp_12)
vis_dat(hamps_comp_12, sort_type = F)
hamps_comp_12 = hamps_comp_12[hamps_comp_12$`Gender_Code_(IP)_sus` == "M",]
hamps_int_df = data.frame(
victim_ID = hamps_int$Victim.Unique.ID..CoP.,
victim_sex = hamps_int$victim.sex,
victim_age = hamps_int$Victim.age.at.time.of.incident,
victim_ethnicity = hamps_int$victim.ethnicity..where.recorded.
)
gtsummary::tbl_summary(hamps_int_df[ ,2:4])
hamps_comp_df = data.frame(
victim_ID = hamps_comp_12$C_Nominal_Number_agg,
victim_sex = hamps_comp_12$`Gender_Code_(IP)_agg`,
victim_age = hamps_comp_12$Age_agg,
victim_ethnicity = hamps_comp_12$SD_Ethnicity_agg
)
gtsummary::tbl_summary(hamps_comp_df[ ,2:4])
hamps_int_df$suspect_ID = hamps_int$Suspect.Unique.ID
hamps_int_df$suspect_sex = hamps_int$Suspect.Sex
hamps_int_df$suspect_age = hamps_int$Suspect.Age..at.time.of.incident.
hamps_int_df$suspect_ethnicity = hamps_int$Suspect.ethnicity
gtsummary::tbl_summary(hamps_int_df[ ,6:8])
hamps_comp_df$suspect_ID = hamps_comp_12$C_Nominal_Number_sus
hamps_comp_df$suspect_sex = hamps_comp_12$`Gender_Code_(IP)_sus`
hamps_comp_df$suspect_age = hamps_comp_12$Age_sus
hamps_comp_df$suspect_ethnicity = hamps_comp_12$SD_Ethnicity_sus
gtsummary::tbl_summary(hamps_comp_df[ ,6:8])
hamps_int_df$police_force = hamps_int$Police.force
hamps_int_df$police_district = hamps_int$Police.force.district.of.address.where.products.are.issued
hamps_int_df$police_district = gsub("^New Forest.+", "New Forest", hamps_int_df$police_district) # tidy up New Forest
table(hamps_int_df$police_district)
hamps_comp_df$police_force = hamps_comp_12$police_force = "Hampshire and Isle of Wight Constabulary"
hamps_comp_df$police_district = hamps_comp_12$District_Name_agg
hamps_inc_types = read.csv(file = "Hampshire/inc_types_hamps.csv", header=T)
hamps_inc_types %>% kable %>% kable_styling("striped") %>%
scroll_box(height = "600px")
hamps_int_df$date_latest = as.Date(hamps_int$Date.of.Incident.that.has.resulted.in.product.s..being.offered..Latest.date., format = "%d/%m/%Y")
summary(hamps_int_df$date_latest)
hamps_int_df$date_warning = as.Date(hamps_int$Date.warning.delivered, format = "%d/%m/%Y")
summary(hamps_int_df$date_warning)
hamps_int_df$incident_type_raw = toupper(hamps_int$INCIDENT.TYPE.RECODED)
hamps_int_df$category = sapply(
1:nrow(hamps_int_df),
function(i){
hamps_inc_types$category[hamps_inc_types$inc_type == hamps_int_df$incident_type_raw[i]]
}
)
hamps_int_df$violent_SO = hamps_int_df$category == "violent_SO"
hamps_int_df$CoC = hamps_int_df$category == "CoC"
hamps_int_df$theft_CD = hamps_int_df$category == "theft_CD"
hamps_int_df$breach = hamps_int_df$category == "breach"
hamps_int_df[,13:17] %>% kable() %>% kable_styling("striped") %>%
scroll_box(width="900px", height = "600px")
sum(hamps_comp_12$`Start_Date_(SD_Adj)_agg`!=hamps_comp_12$`Start_Date_(SD_Adj)_sus`, na.rm=T)
hamps_comp_df$date_latest = as.Date(hamps_comp_12$`Start_Date_(SD_Adj)_agg`, format = "%Y-%m-%d")
summary(hamps_comp_df$date_latest)
hamps_comp_df$date_warning = NA
hamps_comp_12 = hamps_comp_12[!(is.na(hamps_comp_12$Occ_Type_agg)),]
sum(hamps_comp_12$Occ_Type_agg != hamps_comp_12$Occ_Type_sus, na.rm = T)
unique(hamps_int$Warning.delivered.to.Suspect..y.n.)
hamps_int_df$FM_equip = T
hamps_int_df$warning_YN[hamps_int$Warning.delivered.to.Suspect..y.n. == "Yes"] = "Yes"
table(hamps_int_df$warning_YN)
nrow(hamps_int_df)
hamps_int_df$FM_equip = T
hamps_int_df$warning_YN = "No"
hamps_int_df$warning_YN[hamps_int$Warning.delivered.to.Suspect..y.n. == "Yes"] = "Yes"
table(hamps_int_df$warning_YN)
table(hamps_int$Risk.Assessment.from.DASH..standard..medium.or.high.)
nrow(hamps_int)
hamps_int_df$risk_ass = NA
hamps_int_df$risk_ass[hamps_int$risk_ass == "HIGH"] = "High"
hamps_int_df$risk_ass[hamps_int$risk_ass == "MEDIUM"] = "Medium"
table(hamps_int_df$risk_ass)
hamps_int_df$risk_ass = NA
hamps_int_df$risk_ass[hamps_int$Risk.Assessment.from.DASH..standard..medium.or.high. == "HIGH"] = "High"
hamps_int_df$risk_ass[hamps_int$Risk.Assessment.from.DASH..standard..medium.or.high. == "MEDIUM"] = "Medium"
table(hamps_int_df$risk_ass)
table(hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus`)
hamps_comp_df$risk_ass = NA
hamps_compdf$risk_ass[hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus` == "MEDIUM"] = "Medium"
hamps_comp_df$risk_ass[hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus` == "MEDIUM"] = "Medium"
hamps_comp_df$risk_ass[hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus` == "HIGH"] = "High"
table(hamps_comp_df$risk_ass)
sum(hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus` == "MEDIUM")
sum(hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus` == "HIGH")
dim(hamps_comp_df)
(1:72)[hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus` == "MEDIUM"]
length((1:72)[hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus` == "MEDIUM"])
hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus`[hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus` == "MEDIUM"])
hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus`[hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus` == "MEDIUM"]
hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus`[hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus` == "HIGH"]
hamps_comp_df$victim_ID
hamps_comp_12$C_Nominal_Number_agg
dim(hamps_comp_12)
dim(hamps_comp_df)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(gridExtra)
library(kableExtra)
library(readr)
library(readxl)
library(tidyverse)
library(visdat)
library(reshape2)
library(gtsummary)
# setwd("/Users/rachelo/OneDrive - Durham University/AP2020_21/Projects/CoP/SmartWater/FM_analysis/")
hamps_int = read.csv("Hampshire/Anonymised- Op Sentry - Stage 1 Hampshire Complete RE(REVISEDproject management data).csv", header=T)
# Row 26 imports even though it doesn't contain anything
hamps_int = hamps_int[-26,]
# str(hamps)
hamps_int = hamps_int[!(hamps_int$victim.sex == "Male"),]
hamps_comp1 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=1, skip=2)
hamps_comp2 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=2, skip=2)
hamps_comp3 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=3, skip=2)
hamps_comp4 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=4, skip=2)
hamps_comp5 = read_excel("Hampshire/Domestic - Performance Summary Phase 2 Final.xlsx", sheet=5, skip=2)
names(hamps_comp1) = sprintf("%s_agg", names(hamps_comp1)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp2) = sprintf("%s_sus", names(hamps_comp2)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp3) = sprintf("%s_outcome", names(hamps_comp3)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp4) = sprintf("%s_aggprev", names(hamps_comp4)) %>% gsub(pattern = " ", replacement = "_")
names(hamps_comp5) = sprintf("%s_susprev", names(hamps_comp5)) %>% gsub(pattern = " ", replacement = "_")
hamps_comp1a = hamps_comp1[hamps_comp1$`Gender_Code_(IP)_agg` == "F",]
hamps_comp1a = hamps_comp1a[hamps_comp1a$`Off_/_Victim_Relationship_agg` %in%c("EX-PARTNER: HETEROSEXUAL", "PARTNER: HETEROSEXUAL"),]
dim(hamps_comp1a)
length(unique(hamps_comp1a$C_Nominal_Number_agg))
hamps_vicID_dup = hamps_comp1a$C_Nominal_Number_agg[duplicated(hamps_comp1a$C_Nominal_Number_agg)]
hamps_vicID_dup
hamps_comp1a[hamps_comp1a$C_Nominal_Number_agg %in% hamps_vicID_dup,] %>% kable %>%
scroll_box(width = "900px")
hamps_comp1a = hamps_comp1a[!duplicated(hamps_comp1a$C_Nominal_Number_agg),]
any(duplicated(hamps_comp1a$C_Nominal_Number_agg))
hamps_comp2a = hamps_comp2[hamps_comp2$`Off_/_Victim_Relationship_sus` %in%c("EX-PARTNER: HETEROSEXUAL", "PARTNER: HETEROSEXUAL"),]
hamps_susID_dup = hamps_comp2a$C_Nominal_Number_sus[duplicated(hamps_comp2a$C_Nominal_Number_sus)]
hamps_susID_dup
hamps_comp2a[hamps_comp2a$C_Nominal_Number_sus %in% hamps_susID_dup,] %>% kable %>%
scroll_box(width = "900px", height = "600px")
hamps_comp2a = hamps_comp2a[!duplicated(hamps_comp2a$C_Nominal_Number_sus),]
any(duplicated(hamps_comp2a$C_Nominal_Number_sus))
dim(hamps_comp2a)
hamps_comp_12 = full_join(hamps_comp1a, hamps_comp2a, by = join_by(Occurrence_No_agg == Occurrence_No_sus), relationship = "many-to-many")
dim(hamps_comp_12)
vis_dat(hamps_comp_12, sort_type = F)
hamps_comp_12 = hamps_comp_12[hamps_comp_12$`Gender_Code_(IP)_sus` == "M",]
hamps_comp_12 = hamps_comp_12[!(is.na(hamps_comp_12$Occ_Type_agg)),]
hamps_int_df = data.frame(
victim_ID = hamps_int$Victim.Unique.ID..CoP.,
victim_sex = hamps_int$victim.sex,
victim_age = hamps_int$Victim.age.at.time.of.incident,
victim_ethnicity = hamps_int$victim.ethnicity..where.recorded.
)
gtsummary::tbl_summary(hamps_int_df[ ,2:4])
hamps_comp_df = data.frame(
victim_ID = hamps_comp_12$C_Nominal_Number_agg,
victim_sex = hamps_comp_12$`Gender_Code_(IP)_agg`,
victim_age = hamps_comp_12$Age_agg,
victim_ethnicity = hamps_comp_12$SD_Ethnicity_agg
)
gtsummary::tbl_summary(hamps_comp_df[ ,2:4])
hamps_int_df$suspect_ID = hamps_int$Suspect.Unique.ID
hamps_int_df$suspect_sex = hamps_int$Suspect.Sex
hamps_int_df$suspect_age = hamps_int$Suspect.Age..at.time.of.incident.
hamps_int_df$suspect_ethnicity = hamps_int$Suspect.ethnicity
gtsummary::tbl_summary(hamps_int_df[ ,6:8])
hamps_comp_df$suspect_ID = hamps_comp_12$C_Nominal_Number_sus
hamps_comp_df$suspect_sex = hamps_comp_12$`Gender_Code_(IP)_sus`
hamps_comp_df$suspect_age = hamps_comp_12$Age_sus
hamps_comp_df$suspect_ethnicity = hamps_comp_12$SD_Ethnicity_sus
gtsummary::tbl_summary(hamps_comp_df[ ,6:8])
hamps_int_df$police_force = hamps_int$Police.force
hamps_int_df$police_district = hamps_int$Police.force.district.of.address.where.products.are.issued
hamps_int_df$police_district = gsub("^New Forest.+", "New Forest", hamps_int_df$police_district) # tidy up New Forest
table(hamps_int_df$police_district)
hamps_comp_df$police_force = hamps_comp_12$police_force = "Hampshire and Isle of Wight Constabulary"
hamps_comp_df$police_district = hamps_comp_12$District_Name_agg
hamps_inc_types = read.csv(file = "Hampshire/inc_types_hamps.csv", header=T)
hamps_inc_types %>% kable %>% kable_styling("striped") %>%
scroll_box(height = "600px")
hamps_int_df$date_latest = as.Date(hamps_int$Date.of.Incident.that.has.resulted.in.product.s..being.offered..Latest.date., format = "%d/%m/%Y")
summary(hamps_int_df$date_latest)
hamps_int_df$date_warning = as.Date(hamps_int$Date.warning.delivered, format = "%d/%m/%Y")
summary(hamps_int_df$date_warning)
hamps_int_df$incident_type_raw = toupper(hamps_int$INCIDENT.TYPE.RECODED)
hamps_int_df$category = sapply(
1:nrow(hamps_int_df),
function(i){
hamps_inc_types$category[hamps_inc_types$inc_type == hamps_int_df$incident_type_raw[i]]
}
)
hamps_int_df$violent_SO = hamps_int_df$category == "violent_SO"
hamps_int_df$CoC = hamps_int_df$category == "CoC"
hamps_int_df$theft_CD = hamps_int_df$category == "theft_CD"
hamps_int_df$breach = hamps_int_df$category == "breach"
hamps_int_df[,13:17] %>% kable() %>% kable_styling("striped") %>%
scroll_box(width="900px", height = "600px")
sum(hamps_comp_12$`Start_Date_(SD_Adj)_agg`!=hamps_comp_12$`Start_Date_(SD_Adj)_sus`, na.rm=T)
hamps_comp_df$date_latest = as.Date(hamps_comp_12$`Start_Date_(SD_Adj)_agg`, format = "%Y-%m-%d")
summary(hamps_comp_df$date_latest)
hamps_comp_df$date_warning = NA
sum(hamps_comp_12$Occ_Type_agg != hamps_comp_12$Occ_Type_sus, na.rm = T)
hamps_comp_df$incident_type_raw = toupper(hamps_comp_12$Occ_Type_agg)
hamps_comp_df$category = sapply(
1:nrow(hamps_comp_df),
function(i){
hamps_inc_types$category[hamps_inc_types$inc_type == hamps_comp_df$incident_type_raw[i]]
}
)
hamps_comp_df$violent_SO = hamps_comp_df$category == "violent_SO"
hamps_comp_df$CoC = hamps_comp_df$category == "CoC"
hamps_comp_df$theft_CD = hamps_comp_df$category == "theft_CD"
hamps_comp_df$breach = hamps_comp_df$category == "breach"
hamps_comp_df[,13:17] %>% kable() %>% kable_styling("striped") %>%
scroll_box(width="900px", height = "600px")
hamps_int_df$FM_equip = T
hamps_int_df$warning_YN = "No"
hamps_int_df$warning_YN[hamps_int$Warning.delivered.to.Suspect..y.n. == "Yes"] = "Yes"
hamps_comp_df$FM_equip = F
hamps_comp_df$warning_YN = NA
table(hamps_int$Risk.Assessment.from.DASH..standard..medium.or.high.)
hamps_int_df$risk_ass = NA
hamps_int_df$risk_ass[hamps_int$Risk.Assessment.from.DASH..standard..medium.or.high. == "HIGH"] = "HIGH"
hamps_int_df$risk_ass[hamps_int$Risk.Assessment.from.DASH..standard..medium.or.high. == "MEDIUM"] = "MEDIUM"
table(hamps_int_df$risk_ass)
table(hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus`)
dim(hamps_comp_df)
dim(hamps_comp_12)
table(hamps_comp_df$risk_ass)
hamps_comp_df$risk_ass = hamps_comp_12$`Risk_(Detail)_-_Incidents_SUS_OFF_sus`
table(hamps_comp_df$risk_ass)
names(hamps_int)
hamps_int$victim.protection.orders.recoded
hamps_comp_po = read.csv(file = "Hampshire/Op Sentry Evaluation PO_BO Conditions_Cara.csv", header=T)
hamps_comp_po
for (i in 1:nrow(hamps_comp_df)){
sus_id_i= hamps_comp_df$suspect_ID[i]
po_i  = hamps_comp_po$PO.Conditions.[hamps_comp_po$suspect_ID == sus_id_i]
bo_i = hamps_comp_po$Bail.Conditions.[hamps_comp_po$suspect_ID == sus_id_i]
if (length(po_i)!=0){
if(any(c(po_i=="Y", bo_i=="Y"))){
protection_order_i = "Yes"
} else if ((po_i=="No")&(bo_i=="No")){
protection_order_i = "No"
}
}  else {
protection_order_i = NA
}
}
for (i in 1:nrow(hamps_comp_df)){
sus_id_i= hamps_comp_df$suspect_ID[i]
po_i  = hamps_comp_po$PO.Conditions.[hamps_comp_po$suspect_ID == sus_id_i]
bo_i = hamps_comp_po$Bail.Conditions.[hamps_comp_po$suspect_ID == sus_id_i]
if (length(po_i)!=0){
if(any(po_i=="Y", bo_i=="Y")){
protection_order_i = "Yes"
} else if ((po_i=="No")&(bo_i=="No")){
protection_order_i = "No"
}
}  else {
protection_order_i = NA
}
}
for (i in 1:nrow(hamps_comp_df)){
sus_id_i= hamps_comp_df$suspect_ID[i]
po_i  = hamps_comp_po$PO.Conditions.[hamps_comp_po$suspect_ID == sus_id_i]
bo_i = hamps_comp_po$Bail.Conditions.[hamps_comp_po$suspect_ID == sus_id_i]
if (length(po_i)!=0){
if((po_i=="Y")|(bo_i=="Y")){
protection_order_i = "Yes"
} else if ((po_i=="No")&(bo_i=="No")){
protection_order_i = "No"
}
}  else {
protection_order_i = NA
}
}
i=1
sus_id_i= hamps_comp_df$suspect_ID[i]
po_i  = hamps_comp_po$PO.Conditions.[hamps_comp_po$suspect_ID == sus_id_i]
bo_i = hamps_comp_po$Bail.Conditions.[hamps_comp_po$suspect_ID == sus_id_i]
sus_id_i
po_i
po_i  = na.omit(hamps_comp_po$PO.Conditions.[hamps_comp_po$suspect_ID == sus_id_i])
bo_i = na.omit(hamps_comp_po$Bail.Conditions.[hamps_comp_po$suspect_ID == sus_id_i])
po_i
bo_i
if (length(po_i)!=0){
if((po_i=="Y")|(bo_i=="Y")){
protection_order_i = "Yes"
} else if ((po_i=="No")&(bo_i=="No")){
protection_order_i = "No"
}
}  else {
protection_order_i = NA
}
protection_order_i
dim(hamps_comp_po)
dim(na.omit(hamps_comp_po))
names(hamps_comp_po)
hamps_comp_po_only = na.omit(hamps_comp_po[ ,c(5,29:31)])
dim(hamps_comp_po_only)
prot_comp_tmp = data.frame(suspect_ID = hamps_comp_df$suspect_ID)
prot_comp_tmp
prot_comp_tmp_po = left_join(prot_comp_tmp, hamps_comp_po_only, by = "suspect_ID")
prot_comp_tmp = data.frame(suspect_ID = as.integer(hamps_comp_df$suspect_ID))
prot_comp_tmp_po = left_join(prot_comp_tmp, hamps_comp_po_only, by = "suspect_ID")
prot_comp_tmp_po
prot_comp_tmp_po$protection_order = any(prot_comp_tmp_po$PO.Conditions., prot_comp_tmp_po$Bail.Conditions.) == "Y"
prot_comp_tmp_po
prot_comp_tmp_po$protection_order = sapply(
1:nrow(prot_comp_tmp_po),
function(i){
any(prot_comp_tmp_po$PO.Conditions.[i], prot_comp_tmp_po$Bail.Conditions.[i]) == "Y"
}
)
prot_comp_tmp_po
any(prot_comp_tmp_po$PO.Conditions.[3], prot_comp_tmp_po$Bail.Conditions.[3]) == "Y"
any(c(prot_comp_tmp_po$PO.Conditions.[3]=="Y", prot_comp_tmp_po$Bail.Conditions.[3]) == "Y" )
prot_comp_tmp = data.frame(suspect_ID = as.integer(hamps_comp_df$suspect_ID))
prot_comp_tmp_po = left_join(prot_comp_tmp, hamps_comp_po_only, by = "suspect_ID")
prot_comp_tmp_po$protection_order = sapply(
1:nrow(prot_comp_tmp_po),
function(i){
any(c(prot_comp_tmp_po$PO.Conditions.[i]=="Y", prot_comp_tmp_po$Bail.Conditions.[i] == "Y"))
}
)
prot_comp_tmp_po
hamps_comp_df$protection_order = sapply(
1:nrow(prot_comp_tmp_po),
function(i){
any(c(prot_comp_tmp_po$PO.Conditions.[i]=="Y", prot_comp_tmp_po$Bail.Conditions.[i] == "Y"))
}
)
hamps_comp_df = left_join(x=hamps_comp_df, y=prot_comp_tmp_po[,c(1,5)], by = "suspect_ID")
hamps_comp_po_only = na.omit(hamps_comp_po[ ,c(5,29:31)])
hamps_comp_po_only$suspect_ID = as.character(hamps_comp_po_only$suspect_ID)
prot_comp_tmp = data.frame(suspect_ID = hamps_comp_df$suspect_ID)
prot_comp_tmp_po = left_join(prot_comp_tmp, hamps_comp_po_only, by = "suspect_ID")
prot_comp_tmp_po$protection_order = sapply(
1:nrow(prot_comp_tmp_po),
function(i){
any(c(prot_comp_tmp_po$PO.Conditions.[i]=="Y", prot_comp_tmp_po$Bail.Conditions.[i] == "Y"))
}
)
hamps_comp_df = left_join(x=hamps_comp_df, y=prot_comp_tmp_po[,c(1,5)], by = "suspect_ID")
hamps_comp_df
dim(hamps_comp5)
length(unique(hamps_comp5$C_Nominal_Number_susprev))
q()
